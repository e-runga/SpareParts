//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpareParts.Explorer.DataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllItems", ReplyAction="http://tempuri.org/IDataService/GetAllItemsResponse")]
        SpareParts.Dto.ItemDto[] GetAllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllItems", ReplyAction="http://tempuri.org/IDataService/GetAllItemsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ItemDto[]> GetAllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetItemById", ReplyAction="http://tempuri.org/IDataService/GetItemByIdResponse")]
        SpareParts.Dto.ItemDto GetItemById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetItemById", ReplyAction="http://tempuri.org/IDataService/GetItemByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> GetItemByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetItemByName", ReplyAction="http://tempuri.org/IDataService/GetItemByNameResponse")]
        SpareParts.Dto.ItemDto GetItemByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetItemByName", ReplyAction="http://tempuri.org/IDataService/GetItemByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> GetItemByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateItem", ReplyAction="http://tempuri.org/IDataService/CreateItemResponse")]
        SpareParts.Dto.ItemDto CreateItem(SpareParts.Dto.ItemDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateItem", ReplyAction="http://tempuri.org/IDataService/CreateItemResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> CreateItemAsync(SpareParts.Dto.ItemDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveItem", ReplyAction="http://tempuri.org/IDataService/SaveItemResponse")]
        SpareParts.Dto.ItemDto SaveItem(SpareParts.Dto.ItemDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveItem", ReplyAction="http://tempuri.org/IDataService/SaveItemResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> SaveItemAsync(SpareParts.Dto.ItemDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteItem", ReplyAction="http://tempuri.org/IDataService/DeleteItemResponse")]
        bool DeleteItem(SpareParts.Dto.ItemDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteItem", ReplyAction="http://tempuri.org/IDataService/DeleteItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemAsync(SpareParts.Dto.ItemDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllPaperReferences", ReplyAction="http://tempuri.org/IDataService/GetAllPaperReferencesResponse")]
        SpareParts.Dto.PaperReferenceDto[] GetAllPaperReferences();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllPaperReferences", ReplyAction="http://tempuri.org/IDataService/GetAllPaperReferencesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto[]> GetAllPaperReferencesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetPaperReferenceById", ReplyAction="http://tempuri.org/IDataService/GetPaperReferenceByIdResponse")]
        SpareParts.Dto.PaperReferenceDto GetPaperReferenceById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetPaperReferenceById", ReplyAction="http://tempuri.org/IDataService/GetPaperReferenceByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> GetPaperReferenceByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetPaperReferenceByName", ReplyAction="http://tempuri.org/IDataService/GetPaperReferenceByNameResponse")]
        SpareParts.Dto.PaperReferenceDto GetPaperReferenceByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetPaperReferenceByName", ReplyAction="http://tempuri.org/IDataService/GetPaperReferenceByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> GetPaperReferenceByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreatePaperReference", ReplyAction="http://tempuri.org/IDataService/CreatePaperReferenceResponse")]
        SpareParts.Dto.PaperReferenceDto CreatePaperReference(SpareParts.Dto.PaperReferenceDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreatePaperReference", ReplyAction="http://tempuri.org/IDataService/CreatePaperReferenceResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> CreatePaperReferenceAsync(SpareParts.Dto.PaperReferenceDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SavePaperReference", ReplyAction="http://tempuri.org/IDataService/SavePaperReferenceResponse")]
        SpareParts.Dto.PaperReferenceDto SavePaperReference(SpareParts.Dto.PaperReferenceDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SavePaperReference", ReplyAction="http://tempuri.org/IDataService/SavePaperReferenceResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> SavePaperReferenceAsync(SpareParts.Dto.PaperReferenceDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeletePaperReference", ReplyAction="http://tempuri.org/IDataService/DeletePaperReferenceResponse")]
        bool DeletePaperReference(SpareParts.Dto.PaperReferenceDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeletePaperReference", ReplyAction="http://tempuri.org/IDataService/DeletePaperReferenceResponse")]
        System.Threading.Tasks.Task<bool> DeletePaperReferenceAsync(SpareParts.Dto.PaperReferenceDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAttachmentByProductId", ReplyAction="http://tempuri.org/IDataService/GetAttachmentByProductIdResponse")]
        SpareParts.Dto.AttachmentDto[] GetAttachmentByProductId(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAttachmentByProductId", ReplyAction="http://tempuri.org/IDataService/GetAttachmentByProductIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto[]> GetAttachmentByProductIdAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAttachmentById", ReplyAction="http://tempuri.org/IDataService/GetAttachmentByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.AttachmentDto GetAttachmentById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAttachmentById", ReplyAction="http://tempuri.org/IDataService/GetAttachmentByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto> GetAttachmentByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateAttachment", ReplyAction="http://tempuri.org/IDataService/CreateAttachmentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.AttachmentDto CreateAttachment(SpareParts.Dto.AttachmentDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateAttachment", ReplyAction="http://tempuri.org/IDataService/CreateAttachmentResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto> CreateAttachmentAsync(SpareParts.Dto.AttachmentDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveAttachment", ReplyAction="http://tempuri.org/IDataService/SaveAttachmentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.AttachmentDto SaveAttachment(SpareParts.Dto.AttachmentDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveAttachment", ReplyAction="http://tempuri.org/IDataService/SaveAttachmentResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto> SaveAttachmentAsync(SpareParts.Dto.AttachmentDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCustomerById", ReplyAction="http://tempuri.org/IDataService/GetCustomerByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.CustomerDto GetCustomerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCustomerById", ReplyAction="http://tempuri.org/IDataService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto> GetCustomerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCustomers", ReplyAction="http://tempuri.org/IDataService/GetAllCustomersResponse")]
        SpareParts.Dto.CustomerDto[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCustomers", ReplyAction="http://tempuri.org/IDataService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto[]> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCustomersForUI", ReplyAction="http://tempuri.org/IDataService/GetAllCustomersForUIResponse")]
        SpareParts.Dto.CustomerUIDto[] GetAllCustomersForUI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCustomersForUI", ReplyAction="http://tempuri.org/IDataService/GetAllCustomersForUIResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerUIDto[]> GetAllCustomersForUIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SearchCustomer", ReplyAction="http://tempuri.org/IDataService/SearchCustomerResponse")]
        SpareParts.Dto.CustomerDto[] SearchCustomer(string fName, string lName, string email, string mobile, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SearchCustomer", ReplyAction="http://tempuri.org/IDataService/SearchCustomerResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto[]> SearchCustomerAsync(string fName, string lName, string email, string mobile, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCustomer", ReplyAction="http://tempuri.org/IDataService/CreateCustomerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.CustomerDto CreateCustomer(SpareParts.Dto.CustomerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCustomer", ReplyAction="http://tempuri.org/IDataService/CreateCustomerResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto> CreateCustomerAsync(SpareParts.Dto.CustomerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCustomer", ReplyAction="http://tempuri.org/IDataService/SaveCustomerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.CustomerDto SaveCustomer(SpareParts.Dto.CustomerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCustomer", ReplyAction="http://tempuri.org/IDataService/SaveCustomerResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto> SaveCustomerAsync(SpareParts.Dto.CustomerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllYears", ReplyAction="http://tempuri.org/IDataService/GetAllYearsResponse")]
        SpareParts.Dto.YearDto[] GetAllYears();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllYears", ReplyAction="http://tempuri.org/IDataService/GetAllYearsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.YearDto[]> GetAllYearsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetYearById", ReplyAction="http://tempuri.org/IDataService/GetYearByIdResponse")]
        SpareParts.Dto.YearDto GetYearById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetYearById", ReplyAction="http://tempuri.org/IDataService/GetYearByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.YearDto> GetYearByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateYear", ReplyAction="http://tempuri.org/IDataService/CreateYearResponse")]
        SpareParts.Dto.YearDto CreateYear(SpareParts.Dto.YearDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateYear", ReplyAction="http://tempuri.org/IDataService/CreateYearResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.YearDto> CreateYearAsync(SpareParts.Dto.YearDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveYear", ReplyAction="http://tempuri.org/IDataService/SaveYearResponse")]
        SpareParts.Dto.YearDto SaveYear(SpareParts.Dto.YearDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveYear", ReplyAction="http://tempuri.org/IDataService/SaveYearResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.YearDto> SaveYearAsync(SpareParts.Dto.YearDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProducts", ReplyAction="http://tempuri.org/IDataService/GetAllProductsResponse")]
        SpareParts.Dto.ProductDto[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProducts", ReplyAction="http://tempuri.org/IDataService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProductSummaries", ReplyAction="http://tempuri.org/IDataService/GetAllProductSummariesResponse")]
        SpareParts.Dto.ProductSummaryDto[] GetAllProductSummaries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProductSummaries", ReplyAction="http://tempuri.org/IDataService/GetAllProductSummariesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductSummaryDto[]> GetAllProductSummariesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductByCustomerId", ReplyAction="http://tempuri.org/IDataService/GetProductByCustomerIdResponse")]
        SpareParts.Dto.ProductDto[] GetProductByCustomerId(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductByCustomerId", ReplyAction="http://tempuri.org/IDataService/GetProductByCustomerIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto[]> GetProductByCustomerIdAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductByOperatorId", ReplyAction="http://tempuri.org/IDataService/GetProductByOperatorIdResponse")]
        SpareParts.Dto.ProductDto[] GetProductByOperatorId(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductByOperatorId", ReplyAction="http://tempuri.org/IDataService/GetProductByOperatorIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto[]> GetProductByOperatorIdAsync(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductById", ReplyAction="http://tempuri.org/IDataService/GetProductByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto GetProductById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductById", ReplyAction="http://tempuri.org/IDataService/GetProductByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> GetProductByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateProduct", ReplyAction="http://tempuri.org/IDataService/CreateProductResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto CreateProduct(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateProduct", ReplyAction="http://tempuri.org/IDataService/CreateProductResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> CreateProductAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductBasicInfo", ReplyAction="http://tempuri.org/IDataService/SaveProductBasicInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductBasicInfo(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductBasicInfo", ReplyAction="http://tempuri.org/IDataService/SaveProductBasicInfoResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductBasicInfoAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductSelling", ReplyAction="http://tempuri.org/IDataService/SaveProductSellingResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductSelling(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductSelling", ReplyAction="http://tempuri.org/IDataService/SaveProductSellingResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductSellingAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductComplaint", ReplyAction="http://tempuri.org/IDataService/SaveProductComplaintResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductComplaint(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductComplaint", ReplyAction="http://tempuri.org/IDataService/SaveProductComplaintResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductComplaintAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductReturn", ReplyAction="http://tempuri.org/IDataService/SaveProductReturnResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductReturn(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductReturn", ReplyAction="http://tempuri.org/IDataService/SaveProductReturnResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductReturnAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductReplacement", ReplyAction="http://tempuri.org/IDataService/SaveProductReplacementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductReplacement(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductReplacement", ReplyAction="http://tempuri.org/IDataService/SaveProductReplacementResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductReplacementAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductRequest", ReplyAction="http://tempuri.org/IDataService/SaveProductRequestResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductRequest(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductRequest", ReplyAction="http://tempuri.org/IDataService/SaveProductRequestResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductRequestAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductOrdering", ReplyAction="http://tempuri.org/IDataService/SaveProductOrderingResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SpareParts.Dto.OperatorDto))]
        SpareParts.Dto.ProductDto SaveProductOrdering(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductOrdering", ReplyAction="http://tempuri.org/IDataService/SaveProductOrderingResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductOrderingAsync(SpareParts.Dto.ProductDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SearchProduct", ReplyAction="http://tempuri.org/IDataService/SearchProductResponse")]
        SpareParts.Dto.ProductViewDto[] SearchProduct(string productType, string brand, string category, string model, string item, string state, string[] years, string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SearchProduct", ReplyAction="http://tempuri.org/IDataService/SearchProductResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductViewDto[]> SearchProductAsync(string productType, string brand, string category, string model, string item, string state, string[] years, string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SearchSellableProducts", ReplyAction="http://tempuri.org/IDataService/SearchSellableProductsResponse")]
        SpareParts.Dto.ProductViewDto[] SearchSellableProducts(string productType, string brand, string category, string model, string item, string state, string[] years, string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SearchSellableProducts", ReplyAction="http://tempuri.org/IDataService/SearchSellableProductsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductViewDto[]> SearchSellableProductsAsync(string productType, string brand, string category, string model, string item, string state, string[] years, string vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProfileById", ReplyAction="http://tempuri.org/IDataService/GetProfileByIdResponse")]
        SpareParts.Dto.ProfileDto GetProfileById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProfileById", ReplyAction="http://tempuri.org/IDataService/GetProfileByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProfileDto> GetProfileByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProfileByName", ReplyAction="http://tempuri.org/IDataService/GetProfileByNameResponse")]
        SpareParts.Dto.ProfileDto GetProfileByName(string profileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProfileByName", ReplyAction="http://tempuri.org/IDataService/GetProfileByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProfileDto> GetProfileByNameAsync(string profileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProfiles", ReplyAction="http://tempuri.org/IDataService/GetAllProfilesResponse")]
        SpareParts.Dto.ProfileDto[] GetAllProfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProfiles", ReplyAction="http://tempuri.org/IDataService/GetAllProfilesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProfileDto[]> GetAllProfilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProfile", ReplyAction="http://tempuri.org/IDataService/SaveProfileResponse")]
        bool SaveProfile(SpareParts.Dto.ProfileDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProfile", ReplyAction="http://tempuri.org/IDataService/SaveProfileResponse")]
        System.Threading.Tasks.Task<bool> SaveProfileAsync(SpareParts.Dto.ProfileDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllUsers", ReplyAction="http://tempuri.org/IDataService/GetAllUsersResponse")]
        SpareParts.Dto.UserDto[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllUsers", ReplyAction="http://tempuri.org/IDataService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.UserDto[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllUsersForUI", ReplyAction="http://tempuri.org/IDataService/GetAllUsersForUIResponse")]
        SpareParts.Dto.UserUIDto[] GetAllUsersForUI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllUsersForUI", ReplyAction="http://tempuri.org/IDataService/GetAllUsersForUIResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.UserUIDto[]> GetAllUsersForUIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetUserByUserName", ReplyAction="http://tempuri.org/IDataService/GetUserByUserNameResponse")]
        SpareParts.Dto.UserDto GetUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetUserByUserName", ReplyAction="http://tempuri.org/IDataService/GetUserByUserNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.UserDto> GetUserByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetUserById", ReplyAction="http://tempuri.org/IDataService/GetUserByIdResponse")]
        SpareParts.Dto.UserDto GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetUserById", ReplyAction="http://tempuri.org/IDataService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.UserDto> GetUserByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateUser", ReplyAction="http://tempuri.org/IDataService/CreateUserResponse")]
        SpareParts.Dto.UserDto CreateUser(SpareParts.Dto.UserDto newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateUser", ReplyAction="http://tempuri.org/IDataService/CreateUserResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.UserDto> CreateUserAsync(SpareParts.Dto.UserDto newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveUser", ReplyAction="http://tempuri.org/IDataService/SaveUserResponse")]
        SpareParts.Dto.UserUIDto SaveUser(SpareParts.Dto.UserUIDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveUser", ReplyAction="http://tempuri.org/IDataService/SaveUserResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.UserUIDto> SaveUserAsync(SpareParts.Dto.UserUIDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Authenticate", ReplyAction="http://tempuri.org/IDataService/AuthenticateResponse")]
        bool Authenticate(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Authenticate", ReplyAction="http://tempuri.org/IDataService/AuthenticateResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DisableUser", ReplyAction="http://tempuri.org/IDataService/DisableUserResponse")]
        bool DisableUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DisableUser", ReplyAction="http://tempuri.org/IDataService/DisableUserResponse")]
        System.Threading.Tasks.Task<bool> DisableUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllBrands", ReplyAction="http://tempuri.org/IDataService/GetAllBrandsResponse")]
        SpareParts.Dto.BrandDto[] GetAllBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllBrands", ReplyAction="http://tempuri.org/IDataService/GetAllBrandsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandDto[]> GetAllBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllBrandsForUI", ReplyAction="http://tempuri.org/IDataService/GetAllBrandsForUIResponse")]
        SpareParts.Dto.BrandViewForUIDto[] GetAllBrandsForUI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllBrandsForUI", ReplyAction="http://tempuri.org/IDataService/GetAllBrandsForUIResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandViewForUIDto[]> GetAllBrandsForUIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetBrandById", ReplyAction="http://tempuri.org/IDataService/GetBrandByIdResponse")]
        SpareParts.Dto.BrandDto GetBrandById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetBrandById", ReplyAction="http://tempuri.org/IDataService/GetBrandByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> GetBrandByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetBrandsByProductType", ReplyAction="http://tempuri.org/IDataService/GetBrandsByProductTypeResponse")]
        SpareParts.Dto.BrandViewForUIDto[] GetBrandsByProductType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetBrandsByProductType", ReplyAction="http://tempuri.org/IDataService/GetBrandsByProductTypeResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandViewForUIDto[]> GetBrandsByProductTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetBrandByName", ReplyAction="http://tempuri.org/IDataService/GetBrandByNameResponse")]
        SpareParts.Dto.BrandDto GetBrandByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetBrandByName", ReplyAction="http://tempuri.org/IDataService/GetBrandByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> GetBrandByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateBrand", ReplyAction="http://tempuri.org/IDataService/CreateBrandResponse")]
        SpareParts.Dto.BrandDto CreateBrand(SpareParts.Dto.BrandDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateBrand", ReplyAction="http://tempuri.org/IDataService/CreateBrandResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> CreateBrandAsync(SpareParts.Dto.BrandDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveBrand", ReplyAction="http://tempuri.org/IDataService/SaveBrandResponse")]
        SpareParts.Dto.BrandDto SaveBrand(SpareParts.Dto.BrandDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveBrand", ReplyAction="http://tempuri.org/IDataService/SaveBrandResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> SaveBrandAsync(SpareParts.Dto.BrandDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteBrand", ReplyAction="http://tempuri.org/IDataService/DeleteBrandResponse")]
        bool DeleteBrand(SpareParts.Dto.BrandDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteBrand", ReplyAction="http://tempuri.org/IDataService/DeleteBrandResponse")]
        System.Threading.Tasks.Task<bool> DeleteBrandAsync(SpareParts.Dto.BrandDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCategories", ReplyAction="http://tempuri.org/IDataService/GetAllCategoriesResponse")]
        SpareParts.Dto.CategoryDto[] GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCategories", ReplyAction="http://tempuri.org/IDataService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto[]> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCategoriesForUIView", ReplyAction="http://tempuri.org/IDataService/GetAllCategoriesForUIViewResponse")]
        SpareParts.Dto.CategoryViewDto[] GetAllCategoriesForUIView();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCategoriesForUIView", ReplyAction="http://tempuri.org/IDataService/GetAllCategoriesForUIViewResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetAllCategoriesForUIViewAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategories", ReplyAction="http://tempuri.org/IDataService/GetCategoriesResponse")]
        SpareParts.Dto.CategoryDto[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategories", ReplyAction="http://tempuri.org/IDataService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubCategories", ReplyAction="http://tempuri.org/IDataService/GetSubCategoriesResponse")]
        SpareParts.Dto.CategoryViewDto[] GetSubCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubCategories", ReplyAction="http://tempuri.org/IDataService/GetSubCategoriesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetSubCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategoryById", ReplyAction="http://tempuri.org/IDataService/GetCategoryByIdResponse")]
        SpareParts.Dto.CategoryDto GetCategoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategoryById", ReplyAction="http://tempuri.org/IDataService/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> GetCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategoriesByProductType", ReplyAction="http://tempuri.org/IDataService/GetCategoriesByProductTypeResponse")]
        SpareParts.Dto.CategoryDto[] GetCategoriesByProductType(int productTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategoriesByProductType", ReplyAction="http://tempuri.org/IDataService/GetCategoriesByProductTypeResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto[]> GetCategoriesByProductTypeAsync(int productTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategoryByName", ReplyAction="http://tempuri.org/IDataService/GetCategoryByNameResponse")]
        SpareParts.Dto.CategoryDto GetCategoryByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCategoryByName", ReplyAction="http://tempuri.org/IDataService/GetCategoryByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> GetCategoryByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubCategory1", ReplyAction="http://tempuri.org/IDataService/GetSubCategory1Response")]
        SpareParts.Dto.CategoryViewDto[] GetSubCategory1(int[] parentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubCategory1", ReplyAction="http://tempuri.org/IDataService/GetSubCategory1Response")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetSubCategory1Async(int[] parentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubCategory2", ReplyAction="http://tempuri.org/IDataService/GetSubCategory2Response")]
        SpareParts.Dto.CategoryViewDto[] GetSubCategory2(int[] parentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubCategory2", ReplyAction="http://tempuri.org/IDataService/GetSubCategory2Response")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetSubCategory2Async(int[] parentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCategory", ReplyAction="http://tempuri.org/IDataService/CreateCategoryResponse")]
        SpareParts.Dto.CategoryDto CreateCategory(SpareParts.Dto.CategoryDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCategory", ReplyAction="http://tempuri.org/IDataService/CreateCategoryResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> CreateCategoryAsync(SpareParts.Dto.CategoryDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCategory", ReplyAction="http://tempuri.org/IDataService/SaveCategoryResponse")]
        SpareParts.Dto.CategoryDto SaveCategory(SpareParts.Dto.CategoryDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCategory", ReplyAction="http://tempuri.org/IDataService/SaveCategoryResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> SaveCategoryAsync(SpareParts.Dto.CategoryDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCategory", ReplyAction="http://tempuri.org/IDataService/DeleteCategoryResponse")]
        bool DeleteCategory(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCategory", ReplyAction="http://tempuri.org/IDataService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCountries", ReplyAction="http://tempuri.org/IDataService/GetAllCountriesResponse")]
        SpareParts.Dto.CountryDto[] GetAllCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCountries", ReplyAction="http://tempuri.org/IDataService/GetAllCountriesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CountryDto[]> GetAllCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCountriesForUI", ReplyAction="http://tempuri.org/IDataService/GetAllCountriesForUIResponse")]
        SpareParts.Dto.CountryUIDto[] GetAllCountriesForUI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCountriesForUI", ReplyAction="http://tempuri.org/IDataService/GetAllCountriesForUIResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CountryUIDto[]> GetAllCountriesForUIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCountriesAndCities", ReplyAction="http://tempuri.org/IDataService/GetAllCountriesAndCitiesResponse")]
        SpareParts.Dto.CountryDto[] GetAllCountriesAndCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCountriesAndCities", ReplyAction="http://tempuri.org/IDataService/GetAllCountriesAndCitiesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CountryDto[]> GetAllCountriesAndCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCountryByName", ReplyAction="http://tempuri.org/IDataService/GetCountryByNameResponse")]
        SpareParts.Dto.CountryDto GetCountryByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCountryByName", ReplyAction="http://tempuri.org/IDataService/GetCountryByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CountryDto> GetCountryByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCountry", ReplyAction="http://tempuri.org/IDataService/CreateCountryResponse")]
        SpareParts.Dto.CountryDto CreateCountry(SpareParts.Dto.CountryDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCountry", ReplyAction="http://tempuri.org/IDataService/CreateCountryResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CountryDto> CreateCountryAsync(SpareParts.Dto.CountryDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCountry", ReplyAction="http://tempuri.org/IDataService/SaveCountryResponse")]
        bool SaveCountry(SpareParts.Dto.CountryUIDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCountry", ReplyAction="http://tempuri.org/IDataService/SaveCountryResponse")]
        System.Threading.Tasks.Task<bool> SaveCountryAsync(SpareParts.Dto.CountryUIDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCountry", ReplyAction="http://tempuri.org/IDataService/DeleteCountryResponse")]
        bool DeleteCountry(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCountry", ReplyAction="http://tempuri.org/IDataService/DeleteCountryResponse")]
        System.Threading.Tasks.Task<bool> DeleteCountryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCityByCountry", ReplyAction="http://tempuri.org/IDataService/GetCityByCountryResponse")]
        SpareParts.Dto.CityDto[] GetCityByCountry(int countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCityByCountry", ReplyAction="http://tempuri.org/IDataService/GetCityByCountryResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CityDto[]> GetCityByCountryAsync(int countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCities", ReplyAction="http://tempuri.org/IDataService/GetAllCitiesResponse")]
        SpareParts.Dto.CityUIDto[] GetAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCities", ReplyAction="http://tempuri.org/IDataService/GetAllCitiesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CityUIDto[]> GetAllCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllLocations", ReplyAction="http://tempuri.org/IDataService/GetAllLocationsResponse")]
        SpareParts.Dto.LocationViewDto[] GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllLocations", ReplyAction="http://tempuri.org/IDataService/GetAllLocationsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.LocationViewDto[]> GetAllLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCityByName", ReplyAction="http://tempuri.org/IDataService/GetCityByNameResponse")]
        SpareParts.Dto.CityDto GetCityByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCityByName", ReplyAction="http://tempuri.org/IDataService/GetCityByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CityDto> GetCityByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCity", ReplyAction="http://tempuri.org/IDataService/CreateCityResponse")]
        SpareParts.Dto.CityDto CreateCity(SpareParts.Dto.CityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCity", ReplyAction="http://tempuri.org/IDataService/CreateCityResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CityDto> CreateCityAsync(SpareParts.Dto.CityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCity", ReplyAction="http://tempuri.org/IDataService/SaveCityResponse")]
        bool SaveCity(SpareParts.Dto.CityUIDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCity", ReplyAction="http://tempuri.org/IDataService/SaveCityResponse")]
        System.Threading.Tasks.Task<bool> SaveCityAsync(SpareParts.Dto.CityUIDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCity", ReplyAction="http://tempuri.org/IDataService/DeleteCityResponse")]
        bool DeleteCity(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCity", ReplyAction="http://tempuri.org/IDataService/DeleteCityResponse")]
        System.Threading.Tasks.Task<bool> DeleteCityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllModels", ReplyAction="http://tempuri.org/IDataService/GetAllModelsResponse")]
        SpareParts.Dto.ModelDto[] GetAllModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllModels", ReplyAction="http://tempuri.org/IDataService/GetAllModelsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetAllModelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllModelsForUI", ReplyAction="http://tempuri.org/IDataService/GetAllModelsForUIResponse")]
        SpareParts.Dto.ModelViewDto[] GetAllModelsForUI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllModelsForUI", ReplyAction="http://tempuri.org/IDataService/GetAllModelsForUIResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelViewDto[]> GetAllModelsForUIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelsByBrand", ReplyAction="http://tempuri.org/IDataService/GetModelsByBrandResponse")]
        SpareParts.Dto.ModelDto[] GetModelsByBrand(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelsByBrand", ReplyAction="http://tempuri.org/IDataService/GetModelsByBrandResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetModelsByBrandAsync(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelsByBrands", ReplyAction="http://tempuri.org/IDataService/GetModelsByBrandsResponse")]
        SpareParts.Dto.ModelDto[] GetModelsByBrands(int[] brandIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelsByBrands", ReplyAction="http://tempuri.org/IDataService/GetModelsByBrandsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetModelsByBrandsAsync(int[] brandIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelById", ReplyAction="http://tempuri.org/IDataService/GetModelByIdResponse")]
        SpareParts.Dto.ModelDto GetModelById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelById", ReplyAction="http://tempuri.org/IDataService/GetModelByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto> GetModelByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelBySubModelId", ReplyAction="http://tempuri.org/IDataService/GetModelBySubModelIdResponse")]
        SpareParts.Dto.ModelDto[] GetModelBySubModelId(int subModelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetModelBySubModelId", ReplyAction="http://tempuri.org/IDataService/GetModelBySubModelIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetModelBySubModelIdAsync(int subModelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateModel", ReplyAction="http://tempuri.org/IDataService/CreateModelResponse")]
        SpareParts.Dto.ModelDto CreateModel(SpareParts.Dto.ModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateModel", ReplyAction="http://tempuri.org/IDataService/CreateModelResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto> CreateModelAsync(SpareParts.Dto.ModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveModel", ReplyAction="http://tempuri.org/IDataService/SaveModelResponse")]
        SpareParts.Dto.ModelDto SaveModel(SpareParts.Dto.ModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveModel", ReplyAction="http://tempuri.org/IDataService/SaveModelResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ModelDto> SaveModelAsync(SpareParts.Dto.ModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteModel", ReplyAction="http://tempuri.org/IDataService/DeleteModelResponse")]
        bool DeleteModel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteModel", ReplyAction="http://tempuri.org/IDataService/DeleteModelResponse")]
        System.Threading.Tasks.Task<bool> DeleteModelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProductTypes", ReplyAction="http://tempuri.org/IDataService/GetAllProductTypesResponse")]
        SpareParts.Dto.ProductTypeViewDto[] GetAllProductTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProductTypes", ReplyAction="http://tempuri.org/IDataService/GetAllProductTypesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeViewDto[]> GetAllProductTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductTypeById", ReplyAction="http://tempuri.org/IDataService/GetProductTypeByIdResponse")]
        SpareParts.Dto.ProductTypeDto GetProductTypeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProductTypeById", ReplyAction="http://tempuri.org/IDataService/GetProductTypeByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeDto> GetProductTypeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateProductType", ReplyAction="http://tempuri.org/IDataService/CreateProductTypeResponse")]
        SpareParts.Dto.ProductTypeDto CreateProductType(SpareParts.Dto.ProductTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateProductType", ReplyAction="http://tempuri.org/IDataService/CreateProductTypeResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeDto> CreateProductTypeAsync(SpareParts.Dto.ProductTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductType", ReplyAction="http://tempuri.org/IDataService/SaveProductTypeResponse")]
        SpareParts.Dto.ProductTypeDto SaveProductType(SpareParts.Dto.ProductTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveProductType", ReplyAction="http://tempuri.org/IDataService/SaveProductTypeResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeDto> SaveProductTypeAsync(SpareParts.Dto.ProductTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteProductType", ReplyAction="http://tempuri.org/IDataService/DeleteProductTypeResponse")]
        bool DeleteProductType(int productTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteProductType", ReplyAction="http://tempuri.org/IDataService/DeleteProductTypeResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductTypeAsync(int productTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllRatings", ReplyAction="http://tempuri.org/IDataService/GetAllRatingsResponse")]
        SpareParts.Dto.RatingDto[] GetAllRatings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllRatings", ReplyAction="http://tempuri.org/IDataService/GetAllRatingsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.RatingDto[]> GetAllRatingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetRatingById", ReplyAction="http://tempuri.org/IDataService/GetRatingByIdResponse")]
        SpareParts.Dto.RatingDto GetRatingById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetRatingById", ReplyAction="http://tempuri.org/IDataService/GetRatingByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> GetRatingByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GeRatingtByName", ReplyAction="http://tempuri.org/IDataService/GeRatingtByNameResponse")]
        SpareParts.Dto.RatingDto GeRatingtByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GeRatingtByName", ReplyAction="http://tempuri.org/IDataService/GeRatingtByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> GeRatingtByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateRating", ReplyAction="http://tempuri.org/IDataService/CreateRatingResponse")]
        SpareParts.Dto.RatingDto CreateRating(SpareParts.Dto.RatingDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateRating", ReplyAction="http://tempuri.org/IDataService/CreateRatingResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> CreateRatingAsync(SpareParts.Dto.RatingDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveRating", ReplyAction="http://tempuri.org/IDataService/SaveRatingResponse")]
        SpareParts.Dto.RatingDto SaveRating(SpareParts.Dto.RatingDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveRating", ReplyAction="http://tempuri.org/IDataService/SaveRatingResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> SaveRatingAsync(SpareParts.Dto.RatingDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteRating", ReplyAction="http://tempuri.org/IDataService/DeleteRatingResponse")]
        bool DeleteRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteRating", ReplyAction="http://tempuri.org/IDataService/DeleteRatingResponse")]
        System.Threading.Tasks.Task<bool> DeleteRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllStates", ReplyAction="http://tempuri.org/IDataService/GetAllStatesResponse")]
        SpareParts.Dto.StateDto[] GetAllStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllStates", ReplyAction="http://tempuri.org/IDataService/GetAllStatesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.StateDto[]> GetAllStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByStateId", ReplyAction="http://tempuri.org/IDataService/GetByStateIdResponse")]
        SpareParts.Dto.StateDto GetByStateId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByStateId", ReplyAction="http://tempuri.org/IDataService/GetByStateIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.StateDto> GetByStateIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetStateByName", ReplyAction="http://tempuri.org/IDataService/GetStateByNameResponse")]
        SpareParts.Dto.StateDto GetStateByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetStateByName", ReplyAction="http://tempuri.org/IDataService/GetStateByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.StateDto> GetStateByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateState", ReplyAction="http://tempuri.org/IDataService/CreateStateResponse")]
        SpareParts.Dto.StateDto CreateState(SpareParts.Dto.StateDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateState", ReplyAction="http://tempuri.org/IDataService/CreateStateResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.StateDto> CreateStateAsync(SpareParts.Dto.StateDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveState", ReplyAction="http://tempuri.org/IDataService/SaveStateResponse")]
        SpareParts.Dto.StateDto SaveState(SpareParts.Dto.StateDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveState", ReplyAction="http://tempuri.org/IDataService/SaveStateResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.StateDto> SaveStateAsync(SpareParts.Dto.StateDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteState", ReplyAction="http://tempuri.org/IDataService/DeleteStateResponse")]
        bool DeleteState(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteState", ReplyAction="http://tempuri.org/IDataService/DeleteStateResponse")]
        System.Threading.Tasks.Task<bool> DeleteStateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllSubModels", ReplyAction="http://tempuri.org/IDataService/GetAllSubModelsResponse")]
        SpareParts.Dto.SubModelDto[] GetAllSubModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllSubModels", ReplyAction="http://tempuri.org/IDataService/GetAllSubModelsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto[]> GetAllSubModelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubModelById", ReplyAction="http://tempuri.org/IDataService/GetSubModelByIdResponse")]
        SpareParts.Dto.SubModelDto GetSubModelById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubModelById", ReplyAction="http://tempuri.org/IDataService/GetSubModelByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto> GetSubModelByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubModelByModelId", ReplyAction="http://tempuri.org/IDataService/GetSubModelByModelIdResponse")]
        SpareParts.Dto.SubModelDto[] GetSubModelByModelId(int modelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubModelByModelId", ReplyAction="http://tempuri.org/IDataService/GetSubModelByModelIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto[]> GetSubModelByModelIdAsync(int modelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubModelByModels", ReplyAction="http://tempuri.org/IDataService/GetSubModelByModelsResponse")]
        SpareParts.Dto.SubModelDto[] GetSubModelByModels(int[] modelIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSubModelByModels", ReplyAction="http://tempuri.org/IDataService/GetSubModelByModelsResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto[]> GetSubModelByModelsAsync(int[] modelIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateSubModel", ReplyAction="http://tempuri.org/IDataService/CreateSubModelResponse")]
        SpareParts.Dto.SubModelDto CreateSubModel(SpareParts.Dto.SubModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateSubModel", ReplyAction="http://tempuri.org/IDataService/CreateSubModelResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto> CreateSubModelAsync(SpareParts.Dto.SubModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveSubModel", ReplyAction="http://tempuri.org/IDataService/SaveSubModelResponse")]
        SpareParts.Dto.SubModelDto SaveSubModel(SpareParts.Dto.SubModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveSubModel", ReplyAction="http://tempuri.org/IDataService/SaveSubModelResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto> SaveSubModelAsync(SpareParts.Dto.SubModelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteSubModel", ReplyAction="http://tempuri.org/IDataService/DeleteSubModelResponse")]
        bool DeleteSubModel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteSubModel", ReplyAction="http://tempuri.org/IDataService/DeleteSubModelResponse")]
        System.Threading.Tasks.Task<bool> DeleteSubModelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCustomerTypes", ReplyAction="http://tempuri.org/IDataService/GetAllCustomerTypesResponse")]
        SpareParts.Dto.CustomerTypeDto[] GetAllCustomerTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllCustomerTypes", ReplyAction="http://tempuri.org/IDataService/GetAllCustomerTypesResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto[]> GetAllCustomerTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCustomerTypeById", ReplyAction="http://tempuri.org/IDataService/GetCustomerTypeByIdResponse")]
        SpareParts.Dto.CustomerTypeDto GetCustomerTypeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCustomerTypeById", ReplyAction="http://tempuri.org/IDataService/GetCustomerTypeByIdResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> GetCustomerTypeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCustomerTypeByName", ReplyAction="http://tempuri.org/IDataService/GetCustomerTypeByNameResponse")]
        SpareParts.Dto.CustomerTypeDto GetCustomerTypeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCustomerTypeByName", ReplyAction="http://tempuri.org/IDataService/GetCustomerTypeByNameResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> GetCustomerTypeByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCustomerType", ReplyAction="http://tempuri.org/IDataService/CreateCustomerTypeResponse")]
        SpareParts.Dto.CustomerTypeDto CreateCustomerType(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateCustomerType", ReplyAction="http://tempuri.org/IDataService/CreateCustomerTypeResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> CreateCustomerTypeAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCustomerType", ReplyAction="http://tempuri.org/IDataService/SaveCustomerTypeResponse")]
        SpareParts.Dto.CustomerTypeDto SaveCustomerType(SpareParts.Dto.CustomerTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/SaveCustomerType", ReplyAction="http://tempuri.org/IDataService/SaveCustomerTypeResponse")]
        System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> SaveCustomerTypeAsync(SpareParts.Dto.CustomerTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCustomerType", ReplyAction="http://tempuri.org/IDataService/DeleteCustomerTypeResponse")]
        bool DeleteCustomerType(SpareParts.Dto.CustomerTypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCustomerType", ReplyAction="http://tempuri.org/IDataService/DeleteCustomerTypeResponse")]
        System.Threading.Tasks.Task<bool> DeleteCustomerTypeAsync(SpareParts.Dto.CustomerTypeDto dto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : SpareParts.Explorer.DataService.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<SpareParts.Explorer.DataService.IDataService>, SpareParts.Explorer.DataService.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SpareParts.Dto.ItemDto[] GetAllItems() {
            return base.Channel.GetAllItems();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ItemDto[]> GetAllItemsAsync() {
            return base.Channel.GetAllItemsAsync();
        }
        
        public SpareParts.Dto.ItemDto GetItemById(int id) {
            return base.Channel.GetItemById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> GetItemByIdAsync(int id) {
            return base.Channel.GetItemByIdAsync(id);
        }
        
        public SpareParts.Dto.ItemDto GetItemByName(string name) {
            return base.Channel.GetItemByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> GetItemByNameAsync(string name) {
            return base.Channel.GetItemByNameAsync(name);
        }
        
        public SpareParts.Dto.ItemDto CreateItem(SpareParts.Dto.ItemDto dto) {
            return base.Channel.CreateItem(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> CreateItemAsync(SpareParts.Dto.ItemDto dto) {
            return base.Channel.CreateItemAsync(dto);
        }
        
        public SpareParts.Dto.ItemDto SaveItem(SpareParts.Dto.ItemDto dto) {
            return base.Channel.SaveItem(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ItemDto> SaveItemAsync(SpareParts.Dto.ItemDto dto) {
            return base.Channel.SaveItemAsync(dto);
        }
        
        public bool DeleteItem(SpareParts.Dto.ItemDto dto) {
            return base.Channel.DeleteItem(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemAsync(SpareParts.Dto.ItemDto dto) {
            return base.Channel.DeleteItemAsync(dto);
        }
        
        public SpareParts.Dto.PaperReferenceDto[] GetAllPaperReferences() {
            return base.Channel.GetAllPaperReferences();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto[]> GetAllPaperReferencesAsync() {
            return base.Channel.GetAllPaperReferencesAsync();
        }
        
        public SpareParts.Dto.PaperReferenceDto GetPaperReferenceById(int id) {
            return base.Channel.GetPaperReferenceById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> GetPaperReferenceByIdAsync(int id) {
            return base.Channel.GetPaperReferenceByIdAsync(id);
        }
        
        public SpareParts.Dto.PaperReferenceDto GetPaperReferenceByName(string name) {
            return base.Channel.GetPaperReferenceByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> GetPaperReferenceByNameAsync(string name) {
            return base.Channel.GetPaperReferenceByNameAsync(name);
        }
        
        public SpareParts.Dto.PaperReferenceDto CreatePaperReference(SpareParts.Dto.PaperReferenceDto dto) {
            return base.Channel.CreatePaperReference(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> CreatePaperReferenceAsync(SpareParts.Dto.PaperReferenceDto dto) {
            return base.Channel.CreatePaperReferenceAsync(dto);
        }
        
        public SpareParts.Dto.PaperReferenceDto SavePaperReference(SpareParts.Dto.PaperReferenceDto dto) {
            return base.Channel.SavePaperReference(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.PaperReferenceDto> SavePaperReferenceAsync(SpareParts.Dto.PaperReferenceDto dto) {
            return base.Channel.SavePaperReferenceAsync(dto);
        }
        
        public bool DeletePaperReference(SpareParts.Dto.PaperReferenceDto dto) {
            return base.Channel.DeletePaperReference(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePaperReferenceAsync(SpareParts.Dto.PaperReferenceDto dto) {
            return base.Channel.DeletePaperReferenceAsync(dto);
        }
        
        public SpareParts.Dto.AttachmentDto[] GetAttachmentByProductId(int productId) {
            return base.Channel.GetAttachmentByProductId(productId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto[]> GetAttachmentByProductIdAsync(int productId) {
            return base.Channel.GetAttachmentByProductIdAsync(productId);
        }
        
        public SpareParts.Dto.AttachmentDto GetAttachmentById(int id) {
            return base.Channel.GetAttachmentById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto> GetAttachmentByIdAsync(int id) {
            return base.Channel.GetAttachmentByIdAsync(id);
        }
        
        public SpareParts.Dto.AttachmentDto CreateAttachment(SpareParts.Dto.AttachmentDto dto) {
            return base.Channel.CreateAttachment(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto> CreateAttachmentAsync(SpareParts.Dto.AttachmentDto dto) {
            return base.Channel.CreateAttachmentAsync(dto);
        }
        
        public SpareParts.Dto.AttachmentDto SaveAttachment(SpareParts.Dto.AttachmentDto dto) {
            return base.Channel.SaveAttachment(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.AttachmentDto> SaveAttachmentAsync(SpareParts.Dto.AttachmentDto dto) {
            return base.Channel.SaveAttachmentAsync(dto);
        }
        
        public SpareParts.Dto.CustomerDto GetCustomerById(int id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto> GetCustomerByIdAsync(int id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public SpareParts.Dto.CustomerDto[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public SpareParts.Dto.CustomerUIDto[] GetAllCustomersForUI() {
            return base.Channel.GetAllCustomersForUI();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerUIDto[]> GetAllCustomersForUIAsync() {
            return base.Channel.GetAllCustomersForUIAsync();
        }
        
        public SpareParts.Dto.CustomerDto[] SearchCustomer(string fName, string lName, string email, string mobile, string phone) {
            return base.Channel.SearchCustomer(fName, lName, email, mobile, phone);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto[]> SearchCustomerAsync(string fName, string lName, string email, string mobile, string phone) {
            return base.Channel.SearchCustomerAsync(fName, lName, email, mobile, phone);
        }
        
        public SpareParts.Dto.CustomerDto CreateCustomer(SpareParts.Dto.CustomerDto dto) {
            return base.Channel.CreateCustomer(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto> CreateCustomerAsync(SpareParts.Dto.CustomerDto dto) {
            return base.Channel.CreateCustomerAsync(dto);
        }
        
        public SpareParts.Dto.CustomerDto SaveCustomer(SpareParts.Dto.CustomerDto dto) {
            return base.Channel.SaveCustomer(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerDto> SaveCustomerAsync(SpareParts.Dto.CustomerDto dto) {
            return base.Channel.SaveCustomerAsync(dto);
        }
        
        public SpareParts.Dto.YearDto[] GetAllYears() {
            return base.Channel.GetAllYears();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.YearDto[]> GetAllYearsAsync() {
            return base.Channel.GetAllYearsAsync();
        }
        
        public SpareParts.Dto.YearDto GetYearById(int id) {
            return base.Channel.GetYearById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.YearDto> GetYearByIdAsync(int id) {
            return base.Channel.GetYearByIdAsync(id);
        }
        
        public SpareParts.Dto.YearDto CreateYear(SpareParts.Dto.YearDto dto) {
            return base.Channel.CreateYear(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.YearDto> CreateYearAsync(SpareParts.Dto.YearDto dto) {
            return base.Channel.CreateYearAsync(dto);
        }
        
        public SpareParts.Dto.YearDto SaveYear(SpareParts.Dto.YearDto dto) {
            return base.Channel.SaveYear(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.YearDto> SaveYearAsync(SpareParts.Dto.YearDto dto) {
            return base.Channel.SaveYearAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public SpareParts.Dto.ProductSummaryDto[] GetAllProductSummaries() {
            return base.Channel.GetAllProductSummaries();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductSummaryDto[]> GetAllProductSummariesAsync() {
            return base.Channel.GetAllProductSummariesAsync();
        }
        
        public SpareParts.Dto.ProductDto[] GetProductByCustomerId(int customerId) {
            return base.Channel.GetProductByCustomerId(customerId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto[]> GetProductByCustomerIdAsync(int customerId) {
            return base.Channel.GetProductByCustomerIdAsync(customerId);
        }
        
        public SpareParts.Dto.ProductDto[] GetProductByOperatorId(int operatorId) {
            return base.Channel.GetProductByOperatorId(operatorId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto[]> GetProductByOperatorIdAsync(int operatorId) {
            return base.Channel.GetProductByOperatorIdAsync(operatorId);
        }
        
        public SpareParts.Dto.ProductDto GetProductById(int id) {
            return base.Channel.GetProductById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> GetProductByIdAsync(int id) {
            return base.Channel.GetProductByIdAsync(id);
        }
        
        public SpareParts.Dto.ProductDto CreateProduct(SpareParts.Dto.ProductDto dto) {
            return base.Channel.CreateProduct(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> CreateProductAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.CreateProductAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductBasicInfo(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductBasicInfo(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductBasicInfoAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductBasicInfoAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductSelling(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductSelling(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductSellingAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductSellingAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductComplaint(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductComplaint(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductComplaintAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductComplaintAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductReturn(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductReturn(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductReturnAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductReturnAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductReplacement(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductReplacement(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductReplacementAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductReplacementAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductRequest(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductRequest(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductRequestAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductRequestAsync(dto);
        }
        
        public SpareParts.Dto.ProductDto SaveProductOrdering(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductOrdering(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductDto> SaveProductOrderingAsync(SpareParts.Dto.ProductDto dto) {
            return base.Channel.SaveProductOrderingAsync(dto);
        }
        
        public SpareParts.Dto.ProductViewDto[] SearchProduct(string productType, string brand, string category, string model, string item, string state, string[] years, string vin) {
            return base.Channel.SearchProduct(productType, brand, category, model, item, state, years, vin);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductViewDto[]> SearchProductAsync(string productType, string brand, string category, string model, string item, string state, string[] years, string vin) {
            return base.Channel.SearchProductAsync(productType, brand, category, model, item, state, years, vin);
        }
        
        public SpareParts.Dto.ProductViewDto[] SearchSellableProducts(string productType, string brand, string category, string model, string item, string state, string[] years, string vin) {
            return base.Channel.SearchSellableProducts(productType, brand, category, model, item, state, years, vin);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductViewDto[]> SearchSellableProductsAsync(string productType, string brand, string category, string model, string item, string state, string[] years, string vin) {
            return base.Channel.SearchSellableProductsAsync(productType, brand, category, model, item, state, years, vin);
        }
        
        public SpareParts.Dto.ProfileDto GetProfileById(int id) {
            return base.Channel.GetProfileById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProfileDto> GetProfileByIdAsync(int id) {
            return base.Channel.GetProfileByIdAsync(id);
        }
        
        public SpareParts.Dto.ProfileDto GetProfileByName(string profileName) {
            return base.Channel.GetProfileByName(profileName);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProfileDto> GetProfileByNameAsync(string profileName) {
            return base.Channel.GetProfileByNameAsync(profileName);
        }
        
        public SpareParts.Dto.ProfileDto[] GetAllProfiles() {
            return base.Channel.GetAllProfiles();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProfileDto[]> GetAllProfilesAsync() {
            return base.Channel.GetAllProfilesAsync();
        }
        
        public bool SaveProfile(SpareParts.Dto.ProfileDto dto) {
            return base.Channel.SaveProfile(dto);
        }
        
        public System.Threading.Tasks.Task<bool> SaveProfileAsync(SpareParts.Dto.ProfileDto dto) {
            return base.Channel.SaveProfileAsync(dto);
        }
        
        public SpareParts.Dto.UserDto[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.UserDto[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public SpareParts.Dto.UserUIDto[] GetAllUsersForUI() {
            return base.Channel.GetAllUsersForUI();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.UserUIDto[]> GetAllUsersForUIAsync() {
            return base.Channel.GetAllUsersForUIAsync();
        }
        
        public SpareParts.Dto.UserDto GetUserByUserName(string userName) {
            return base.Channel.GetUserByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.UserDto> GetUserByUserNameAsync(string userName) {
            return base.Channel.GetUserByUserNameAsync(userName);
        }
        
        public SpareParts.Dto.UserDto GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.UserDto> GetUserByIdAsync(int userId) {
            return base.Channel.GetUserByIdAsync(userId);
        }
        
        public SpareParts.Dto.UserDto CreateUser(SpareParts.Dto.UserDto newUser) {
            return base.Channel.CreateUser(newUser);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.UserDto> CreateUserAsync(SpareParts.Dto.UserDto newUser) {
            return base.Channel.CreateUserAsync(newUser);
        }
        
        public SpareParts.Dto.UserUIDto SaveUser(SpareParts.Dto.UserUIDto user) {
            return base.Channel.SaveUser(user);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.UserUIDto> SaveUserAsync(SpareParts.Dto.UserUIDto user) {
            return base.Channel.SaveUserAsync(user);
        }
        
        public bool Authenticate(string userName, string password) {
            return base.Channel.Authenticate(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateAsync(string userName, string password) {
            return base.Channel.AuthenticateAsync(userName, password);
        }
        
        public bool DisableUser(string userName) {
            return base.Channel.DisableUser(userName);
        }
        
        public System.Threading.Tasks.Task<bool> DisableUserAsync(string userName) {
            return base.Channel.DisableUserAsync(userName);
        }
        
        public SpareParts.Dto.BrandDto[] GetAllBrands() {
            return base.Channel.GetAllBrands();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandDto[]> GetAllBrandsAsync() {
            return base.Channel.GetAllBrandsAsync();
        }
        
        public SpareParts.Dto.BrandViewForUIDto[] GetAllBrandsForUI() {
            return base.Channel.GetAllBrandsForUI();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandViewForUIDto[]> GetAllBrandsForUIAsync() {
            return base.Channel.GetAllBrandsForUIAsync();
        }
        
        public SpareParts.Dto.BrandDto GetBrandById(int id) {
            return base.Channel.GetBrandById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> GetBrandByIdAsync(int id) {
            return base.Channel.GetBrandByIdAsync(id);
        }
        
        public SpareParts.Dto.BrandViewForUIDto[] GetBrandsByProductType(int id) {
            return base.Channel.GetBrandsByProductType(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandViewForUIDto[]> GetBrandsByProductTypeAsync(int id) {
            return base.Channel.GetBrandsByProductTypeAsync(id);
        }
        
        public SpareParts.Dto.BrandDto GetBrandByName(string name) {
            return base.Channel.GetBrandByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> GetBrandByNameAsync(string name) {
            return base.Channel.GetBrandByNameAsync(name);
        }
        
        public SpareParts.Dto.BrandDto CreateBrand(SpareParts.Dto.BrandDto dto) {
            return base.Channel.CreateBrand(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> CreateBrandAsync(SpareParts.Dto.BrandDto dto) {
            return base.Channel.CreateBrandAsync(dto);
        }
        
        public SpareParts.Dto.BrandDto SaveBrand(SpareParts.Dto.BrandDto dto) {
            return base.Channel.SaveBrand(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.BrandDto> SaveBrandAsync(SpareParts.Dto.BrandDto dto) {
            return base.Channel.SaveBrandAsync(dto);
        }
        
        public bool DeleteBrand(SpareParts.Dto.BrandDto dto) {
            return base.Channel.DeleteBrand(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBrandAsync(SpareParts.Dto.BrandDto dto) {
            return base.Channel.DeleteBrandAsync(dto);
        }
        
        public SpareParts.Dto.CategoryDto[] GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto[]> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public SpareParts.Dto.CategoryViewDto[] GetAllCategoriesForUIView() {
            return base.Channel.GetAllCategoriesForUIView();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetAllCategoriesForUIViewAsync() {
            return base.Channel.GetAllCategoriesForUIViewAsync();
        }
        
        public SpareParts.Dto.CategoryDto[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public SpareParts.Dto.CategoryViewDto[] GetSubCategories() {
            return base.Channel.GetSubCategories();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetSubCategoriesAsync() {
            return base.Channel.GetSubCategoriesAsync();
        }
        
        public SpareParts.Dto.CategoryDto GetCategoryById(int id) {
            return base.Channel.GetCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> GetCategoryByIdAsync(int id) {
            return base.Channel.GetCategoryByIdAsync(id);
        }
        
        public SpareParts.Dto.CategoryDto[] GetCategoriesByProductType(int productTypeId) {
            return base.Channel.GetCategoriesByProductType(productTypeId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto[]> GetCategoriesByProductTypeAsync(int productTypeId) {
            return base.Channel.GetCategoriesByProductTypeAsync(productTypeId);
        }
        
        public SpareParts.Dto.CategoryDto GetCategoryByName(string name) {
            return base.Channel.GetCategoryByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> GetCategoryByNameAsync(string name) {
            return base.Channel.GetCategoryByNameAsync(name);
        }
        
        public SpareParts.Dto.CategoryViewDto[] GetSubCategory1(int[] parentIds) {
            return base.Channel.GetSubCategory1(parentIds);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetSubCategory1Async(int[] parentIds) {
            return base.Channel.GetSubCategory1Async(parentIds);
        }
        
        public SpareParts.Dto.CategoryViewDto[] GetSubCategory2(int[] parentIds) {
            return base.Channel.GetSubCategory2(parentIds);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryViewDto[]> GetSubCategory2Async(int[] parentIds) {
            return base.Channel.GetSubCategory2Async(parentIds);
        }
        
        public SpareParts.Dto.CategoryDto CreateCategory(SpareParts.Dto.CategoryDto dto) {
            return base.Channel.CreateCategory(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> CreateCategoryAsync(SpareParts.Dto.CategoryDto dto) {
            return base.Channel.CreateCategoryAsync(dto);
        }
        
        public SpareParts.Dto.CategoryDto SaveCategory(SpareParts.Dto.CategoryDto dto) {
            return base.Channel.SaveCategory(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CategoryDto> SaveCategoryAsync(SpareParts.Dto.CategoryDto dto) {
            return base.Channel.SaveCategoryAsync(dto);
        }
        
        public bool DeleteCategory(int categoryId) {
            return base.Channel.DeleteCategory(categoryId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCategoryAsync(int categoryId) {
            return base.Channel.DeleteCategoryAsync(categoryId);
        }
        
        public SpareParts.Dto.CountryDto[] GetAllCountries() {
            return base.Channel.GetAllCountries();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CountryDto[]> GetAllCountriesAsync() {
            return base.Channel.GetAllCountriesAsync();
        }
        
        public SpareParts.Dto.CountryUIDto[] GetAllCountriesForUI() {
            return base.Channel.GetAllCountriesForUI();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CountryUIDto[]> GetAllCountriesForUIAsync() {
            return base.Channel.GetAllCountriesForUIAsync();
        }
        
        public SpareParts.Dto.CountryDto[] GetAllCountriesAndCities() {
            return base.Channel.GetAllCountriesAndCities();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CountryDto[]> GetAllCountriesAndCitiesAsync() {
            return base.Channel.GetAllCountriesAndCitiesAsync();
        }
        
        public SpareParts.Dto.CountryDto GetCountryByName(string name) {
            return base.Channel.GetCountryByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CountryDto> GetCountryByNameAsync(string name) {
            return base.Channel.GetCountryByNameAsync(name);
        }
        
        public SpareParts.Dto.CountryDto CreateCountry(SpareParts.Dto.CountryDto dto) {
            return base.Channel.CreateCountry(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CountryDto> CreateCountryAsync(SpareParts.Dto.CountryDto dto) {
            return base.Channel.CreateCountryAsync(dto);
        }
        
        public bool SaveCountry(SpareParts.Dto.CountryUIDto dto) {
            return base.Channel.SaveCountry(dto);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCountryAsync(SpareParts.Dto.CountryUIDto dto) {
            return base.Channel.SaveCountryAsync(dto);
        }
        
        public bool DeleteCountry(int id) {
            return base.Channel.DeleteCountry(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCountryAsync(int id) {
            return base.Channel.DeleteCountryAsync(id);
        }
        
        public SpareParts.Dto.CityDto[] GetCityByCountry(int countryId) {
            return base.Channel.GetCityByCountry(countryId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CityDto[]> GetCityByCountryAsync(int countryId) {
            return base.Channel.GetCityByCountryAsync(countryId);
        }
        
        public SpareParts.Dto.CityUIDto[] GetAllCities() {
            return base.Channel.GetAllCities();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CityUIDto[]> GetAllCitiesAsync() {
            return base.Channel.GetAllCitiesAsync();
        }
        
        public SpareParts.Dto.LocationViewDto[] GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.LocationViewDto[]> GetAllLocationsAsync() {
            return base.Channel.GetAllLocationsAsync();
        }
        
        public SpareParts.Dto.CityDto GetCityByName(string name) {
            return base.Channel.GetCityByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CityDto> GetCityByNameAsync(string name) {
            return base.Channel.GetCityByNameAsync(name);
        }
        
        public SpareParts.Dto.CityDto CreateCity(SpareParts.Dto.CityDto dto) {
            return base.Channel.CreateCity(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CityDto> CreateCityAsync(SpareParts.Dto.CityDto dto) {
            return base.Channel.CreateCityAsync(dto);
        }
        
        public bool SaveCity(SpareParts.Dto.CityUIDto dto) {
            return base.Channel.SaveCity(dto);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCityAsync(SpareParts.Dto.CityUIDto dto) {
            return base.Channel.SaveCityAsync(dto);
        }
        
        public bool DeleteCity(int id) {
            return base.Channel.DeleteCity(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCityAsync(int id) {
            return base.Channel.DeleteCityAsync(id);
        }
        
        public SpareParts.Dto.ModelDto[] GetAllModels() {
            return base.Channel.GetAllModels();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetAllModelsAsync() {
            return base.Channel.GetAllModelsAsync();
        }
        
        public SpareParts.Dto.ModelViewDto[] GetAllModelsForUI() {
            return base.Channel.GetAllModelsForUI();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelViewDto[]> GetAllModelsForUIAsync() {
            return base.Channel.GetAllModelsForUIAsync();
        }
        
        public SpareParts.Dto.ModelDto[] GetModelsByBrand(int brandId) {
            return base.Channel.GetModelsByBrand(brandId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetModelsByBrandAsync(int brandId) {
            return base.Channel.GetModelsByBrandAsync(brandId);
        }
        
        public SpareParts.Dto.ModelDto[] GetModelsByBrands(int[] brandIds) {
            return base.Channel.GetModelsByBrands(brandIds);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetModelsByBrandsAsync(int[] brandIds) {
            return base.Channel.GetModelsByBrandsAsync(brandIds);
        }
        
        public SpareParts.Dto.ModelDto GetModelById(int id) {
            return base.Channel.GetModelById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto> GetModelByIdAsync(int id) {
            return base.Channel.GetModelByIdAsync(id);
        }
        
        public SpareParts.Dto.ModelDto[] GetModelBySubModelId(int subModelId) {
            return base.Channel.GetModelBySubModelId(subModelId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto[]> GetModelBySubModelIdAsync(int subModelId) {
            return base.Channel.GetModelBySubModelIdAsync(subModelId);
        }
        
        public SpareParts.Dto.ModelDto CreateModel(SpareParts.Dto.ModelDto dto) {
            return base.Channel.CreateModel(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto> CreateModelAsync(SpareParts.Dto.ModelDto dto) {
            return base.Channel.CreateModelAsync(dto);
        }
        
        public SpareParts.Dto.ModelDto SaveModel(SpareParts.Dto.ModelDto dto) {
            return base.Channel.SaveModel(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ModelDto> SaveModelAsync(SpareParts.Dto.ModelDto dto) {
            return base.Channel.SaveModelAsync(dto);
        }
        
        public bool DeleteModel(int id) {
            return base.Channel.DeleteModel(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteModelAsync(int id) {
            return base.Channel.DeleteModelAsync(id);
        }
        
        public SpareParts.Dto.ProductTypeViewDto[] GetAllProductTypes() {
            return base.Channel.GetAllProductTypes();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeViewDto[]> GetAllProductTypesAsync() {
            return base.Channel.GetAllProductTypesAsync();
        }
        
        public SpareParts.Dto.ProductTypeDto GetProductTypeById(int id) {
            return base.Channel.GetProductTypeById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeDto> GetProductTypeByIdAsync(int id) {
            return base.Channel.GetProductTypeByIdAsync(id);
        }
        
        public SpareParts.Dto.ProductTypeDto CreateProductType(SpareParts.Dto.ProductTypeDto dto) {
            return base.Channel.CreateProductType(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeDto> CreateProductTypeAsync(SpareParts.Dto.ProductTypeDto dto) {
            return base.Channel.CreateProductTypeAsync(dto);
        }
        
        public SpareParts.Dto.ProductTypeDto SaveProductType(SpareParts.Dto.ProductTypeDto dto) {
            return base.Channel.SaveProductType(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.ProductTypeDto> SaveProductTypeAsync(SpareParts.Dto.ProductTypeDto dto) {
            return base.Channel.SaveProductTypeAsync(dto);
        }
        
        public bool DeleteProductType(int productTypeId) {
            return base.Channel.DeleteProductType(productTypeId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductTypeAsync(int productTypeId) {
            return base.Channel.DeleteProductTypeAsync(productTypeId);
        }
        
        public SpareParts.Dto.RatingDto[] GetAllRatings() {
            return base.Channel.GetAllRatings();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.RatingDto[]> GetAllRatingsAsync() {
            return base.Channel.GetAllRatingsAsync();
        }
        
        public SpareParts.Dto.RatingDto GetRatingById(int id) {
            return base.Channel.GetRatingById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> GetRatingByIdAsync(int id) {
            return base.Channel.GetRatingByIdAsync(id);
        }
        
        public SpareParts.Dto.RatingDto GeRatingtByName(string name) {
            return base.Channel.GeRatingtByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> GeRatingtByNameAsync(string name) {
            return base.Channel.GeRatingtByNameAsync(name);
        }
        
        public SpareParts.Dto.RatingDto CreateRating(SpareParts.Dto.RatingDto dto) {
            return base.Channel.CreateRating(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> CreateRatingAsync(SpareParts.Dto.RatingDto dto) {
            return base.Channel.CreateRatingAsync(dto);
        }
        
        public SpareParts.Dto.RatingDto SaveRating(SpareParts.Dto.RatingDto dto) {
            return base.Channel.SaveRating(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.RatingDto> SaveRatingAsync(SpareParts.Dto.RatingDto dto) {
            return base.Channel.SaveRatingAsync(dto);
        }
        
        public bool DeleteRating(int id) {
            return base.Channel.DeleteRating(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRatingAsync(int id) {
            return base.Channel.DeleteRatingAsync(id);
        }
        
        public SpareParts.Dto.StateDto[] GetAllStates() {
            return base.Channel.GetAllStates();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.StateDto[]> GetAllStatesAsync() {
            return base.Channel.GetAllStatesAsync();
        }
        
        public SpareParts.Dto.StateDto GetByStateId(int id) {
            return base.Channel.GetByStateId(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.StateDto> GetByStateIdAsync(int id) {
            return base.Channel.GetByStateIdAsync(id);
        }
        
        public SpareParts.Dto.StateDto GetStateByName(string name) {
            return base.Channel.GetStateByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.StateDto> GetStateByNameAsync(string name) {
            return base.Channel.GetStateByNameAsync(name);
        }
        
        public SpareParts.Dto.StateDto CreateState(SpareParts.Dto.StateDto dto) {
            return base.Channel.CreateState(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.StateDto> CreateStateAsync(SpareParts.Dto.StateDto dto) {
            return base.Channel.CreateStateAsync(dto);
        }
        
        public SpareParts.Dto.StateDto SaveState(SpareParts.Dto.StateDto dto) {
            return base.Channel.SaveState(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.StateDto> SaveStateAsync(SpareParts.Dto.StateDto dto) {
            return base.Channel.SaveStateAsync(dto);
        }
        
        public bool DeleteState(int id) {
            return base.Channel.DeleteState(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStateAsync(int id) {
            return base.Channel.DeleteStateAsync(id);
        }
        
        public SpareParts.Dto.SubModelDto[] GetAllSubModels() {
            return base.Channel.GetAllSubModels();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto[]> GetAllSubModelsAsync() {
            return base.Channel.GetAllSubModelsAsync();
        }
        
        public SpareParts.Dto.SubModelDto GetSubModelById(int id) {
            return base.Channel.GetSubModelById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto> GetSubModelByIdAsync(int id) {
            return base.Channel.GetSubModelByIdAsync(id);
        }
        
        public SpareParts.Dto.SubModelDto[] GetSubModelByModelId(int modelId) {
            return base.Channel.GetSubModelByModelId(modelId);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto[]> GetSubModelByModelIdAsync(int modelId) {
            return base.Channel.GetSubModelByModelIdAsync(modelId);
        }
        
        public SpareParts.Dto.SubModelDto[] GetSubModelByModels(int[] modelIds) {
            return base.Channel.GetSubModelByModels(modelIds);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto[]> GetSubModelByModelsAsync(int[] modelIds) {
            return base.Channel.GetSubModelByModelsAsync(modelIds);
        }
        
        public SpareParts.Dto.SubModelDto CreateSubModel(SpareParts.Dto.SubModelDto dto) {
            return base.Channel.CreateSubModel(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto> CreateSubModelAsync(SpareParts.Dto.SubModelDto dto) {
            return base.Channel.CreateSubModelAsync(dto);
        }
        
        public SpareParts.Dto.SubModelDto SaveSubModel(SpareParts.Dto.SubModelDto dto) {
            return base.Channel.SaveSubModel(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.SubModelDto> SaveSubModelAsync(SpareParts.Dto.SubModelDto dto) {
            return base.Channel.SaveSubModelAsync(dto);
        }
        
        public bool DeleteSubModel(int id) {
            return base.Channel.DeleteSubModel(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSubModelAsync(int id) {
            return base.Channel.DeleteSubModelAsync(id);
        }
        
        public SpareParts.Dto.CustomerTypeDto[] GetAllCustomerTypes() {
            return base.Channel.GetAllCustomerTypes();
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto[]> GetAllCustomerTypesAsync() {
            return base.Channel.GetAllCustomerTypesAsync();
        }
        
        public SpareParts.Dto.CustomerTypeDto GetCustomerTypeById(int id) {
            return base.Channel.GetCustomerTypeById(id);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> GetCustomerTypeByIdAsync(int id) {
            return base.Channel.GetCustomerTypeByIdAsync(id);
        }
        
        public SpareParts.Dto.CustomerTypeDto GetCustomerTypeByName(string name) {
            return base.Channel.GetCustomerTypeByName(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> GetCustomerTypeByNameAsync(string name) {
            return base.Channel.GetCustomerTypeByNameAsync(name);
        }
        
        public SpareParts.Dto.CustomerTypeDto CreateCustomerType(string name) {
            return base.Channel.CreateCustomerType(name);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> CreateCustomerTypeAsync(string name) {
            return base.Channel.CreateCustomerTypeAsync(name);
        }
        
        public SpareParts.Dto.CustomerTypeDto SaveCustomerType(SpareParts.Dto.CustomerTypeDto dto) {
            return base.Channel.SaveCustomerType(dto);
        }
        
        public System.Threading.Tasks.Task<SpareParts.Dto.CustomerTypeDto> SaveCustomerTypeAsync(SpareParts.Dto.CustomerTypeDto dto) {
            return base.Channel.SaveCustomerTypeAsync(dto);
        }
        
        public bool DeleteCustomerType(SpareParts.Dto.CustomerTypeDto dto) {
            return base.Channel.DeleteCustomerType(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCustomerTypeAsync(SpareParts.Dto.CustomerTypeDto dto) {
            return base.Channel.DeleteCustomerTypeAsync(dto);
        }
    }
}
