//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_City_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Country), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.City), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Customer_CustomerType", "CustomerType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.CustomerType), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Customer), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_ProductYear_Year", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Year), "ProductYear", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.ProductYear), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "BrandModel", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Brand), "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Model))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "ModelSubModel", "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Model), "SubModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.SubModel))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "ProductTypeBrand", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Brand), "ProductType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.ProductType))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "ProductTypeCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Category), "ProductType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.ProductType))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Category_SubCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Category), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Attachment_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Product), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Attachment), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.City), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_Buyer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Customer), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_CustomerCreator", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Customer), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_OrderCustomer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Customer), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Item), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_PaperReference", "PaperReference", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.PaperReference), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_ComplaintOperator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_OperatorCreator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_OrderOperator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_ProductType", "ProductType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.ProductType), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_Rating", "Rating", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Rating), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_ReplaceOperator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_RequestOperator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_ReturnOperator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_SellingOperator", "Operator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SpareParts.DataAccess.Models.Operator), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.State), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_ProductYear_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.Product), "ProductYear", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.ProductYear), true)]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "ProductBrand", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Brand), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "ProductCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Category), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "ProductModel", "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Model), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product))]
[assembly: EdmRelationshipAttribute("SpareParts.DataAccess.Models", "FK_Product_ProductStatus", "ProductStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SpareParts.DataAccess.Models.ProductStatus), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SpareParts.DataAccess.Models.Product), true)]

#endregion

namespace SpareParts.DataAccess.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelEntities object using the connection string found in the 'DataModelEntities' section of the application configuration file.
        /// </summary>
        public DataModelEntities() : base("name=DataModelEntities", "DataModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelEntities object.
        /// </summary>
        public DataModelEntities(string connectionString) : base(connectionString, "DataModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelEntities object.
        /// </summary>
        public DataModelEntities(EntityConnection connection) : base(connection, "DataModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachment
        {
            get
            {
                if ((_Attachment == null))
                {
                    _Attachment = base.CreateObjectSet<Attachment>("Attachment");
                }
                return _Attachment;
            }
        }
        private ObjectSet<Attachment> _Attachment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerType> CustomerType
        {
            get
            {
                if ((_CustomerType == null))
                {
                    _CustomerType = base.CreateObjectSet<CustomerType>("CustomerType");
                }
                return _CustomerType;
            }
        }
        private ObjectSet<CustomerType> _CustomerType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Item
        {
            get
            {
                if ((_Item == null))
                {
                    _Item = base.CreateObjectSet<Item>("Item");
                }
                return _Item;
            }
        }
        private ObjectSet<Item> _Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaperReference> PaperReference
        {
            get
            {
                if ((_PaperReference == null))
                {
                    _PaperReference = base.CreateObjectSet<PaperReference>("PaperReference");
                }
                return _PaperReference;
            }
        }
        private ObjectSet<PaperReference> _PaperReference;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductYear> ProductYear
        {
            get
            {
                if ((_ProductYear == null))
                {
                    _ProductYear = base.CreateObjectSet<ProductYear>("ProductYear");
                }
                return _ProductYear;
            }
        }
        private ObjectSet<ProductYear> _ProductYear;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rating> Rating
        {
            get
            {
                if ((_Rating == null))
                {
                    _Rating = base.CreateObjectSet<Rating>("Rating");
                }
                return _Rating;
            }
        }
        private ObjectSet<Rating> _Rating;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<State>("State");
                }
                return _State;
            }
        }
        private ObjectSet<State> _State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Year> Year
        {
            get
            {
                if ((_Year == null))
                {
                    _Year = base.CreateObjectSet<Year>("Year");
                }
                return _Year;
            }
        }
        private ObjectSet<Year> _Year;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operator> Operator
        {
            get
            {
                if ((_Operator == null))
                {
                    _Operator = base.CreateObjectSet<Operator>("Operator");
                }
                return _Operator;
            }
        }
        private ObjectSet<Operator> _Operator;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Brand> Brand
        {
            get
            {
                if ((_Brand == null))
                {
                    _Brand = base.CreateObjectSet<Brand>("Brand");
                }
                return _Brand;
            }
        }
        private ObjectSet<Brand> _Brand;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Model> Model
        {
            get
            {
                if ((_Model == null))
                {
                    _Model = base.CreateObjectSet<Model>("Model");
                }
                return _Model;
            }
        }
        private ObjectSet<Model> _Model;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductType> ProductType
        {
            get
            {
                if ((_ProductType == null))
                {
                    _ProductType = base.CreateObjectSet<ProductType>("ProductType");
                }
                return _ProductType;
            }
        }
        private ObjectSet<ProductType> _ProductType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubModel> SubModel
        {
            get
            {
                if ((_SubModel == null))
                {
                    _SubModel = base.CreateObjectSet<SubModel>("SubModel");
                }
                return _SubModel;
            }
        }
        private ObjectSet<SubModel> _SubModel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandView> BrandView
        {
            get
            {
                if ((_BrandView == null))
                {
                    _BrandView = base.CreateObjectSet<BrandView>("BrandView");
                }
                return _BrandView;
            }
        }
        private ObjectSet<BrandView> _BrandView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandViewForUI> BrandViewForUI
        {
            get
            {
                if ((_BrandViewForUI == null))
                {
                    _BrandViewForUI = base.CreateObjectSet<BrandViewForUI>("BrandViewForUI");
                }
                return _BrandViewForUI;
            }
        }
        private ObjectSet<BrandViewForUI> _BrandViewForUI;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationView> LocationView
        {
            get
            {
                if ((_LocationView == null))
                {
                    _LocationView = base.CreateObjectSet<LocationView>("LocationView");
                }
                return _LocationView;
            }
        }
        private ObjectSet<LocationView> _LocationView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductTypeView> ProductTypeView
        {
            get
            {
                if ((_ProductTypeView == null))
                {
                    _ProductTypeView = base.CreateObjectSet<ProductTypeView>("ProductTypeView");
                }
                return _ProductTypeView;
            }
        }
        private ObjectSet<ProductTypeView> _ProductTypeView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModelView> ModelView
        {
            get
            {
                if ((_ModelView == null))
                {
                    _ModelView = base.CreateObjectSet<ModelView>("ModelView");
                }
                return _ModelView;
            }
        }
        private ObjectSet<ModelView> _ModelView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryView> CategoryView
        {
            get
            {
                if ((_CategoryView == null))
                {
                    _CategoryView = base.CreateObjectSet<CategoryView>("CategoryView");
                }
                return _CategoryView;
            }
        }
        private ObjectSet<CategoryView> _CategoryView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActiveCategoriesView> ActiveCategoriesView
        {
            get
            {
                if ((_ActiveCategoriesView == null))
                {
                    _ActiveCategoriesView = base.CreateObjectSet<ActiveCategoriesView>("ActiveCategoriesView");
                }
                return _ActiveCategoriesView;
            }
        }
        private ObjectSet<ActiveCategoriesView> _ActiveCategoriesView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductTypeBrandView> ProductTypeBrandView
        {
            get
            {
                if ((_ProductTypeBrandView == null))
                {
                    _ProductTypeBrandView = base.CreateObjectSet<ProductTypeBrandView>("ProductTypeBrandView");
                }
                return _ProductTypeBrandView;
            }
        }
        private ObjectSet<ProductTypeBrandView> _ProductTypeBrandView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductView> ProductView
        {
            get
            {
                if ((_ProductView == null))
                {
                    _ProductView = base.CreateObjectSet<ProductView>("ProductView");
                }
                return _ProductView;
            }
        }
        private ObjectSet<ProductView> _ProductView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductStatus> ProductStatus
        {
            get
            {
                if ((_ProductStatus == null))
                {
                    _ProductStatus = base.CreateObjectSet<ProductStatus>("ProductStatus");
                }
                return _ProductStatus;
            }
        }
        private ObjectSet<ProductStatus> _ProductStatus;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachment(Attachment attachment)
        {
            base.AddObject("Attachment", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the City EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerType(CustomerType customerType)
        {
            base.AddObject("CustomerType", customerType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItem(Item item)
        {
            base.AddObject("Item", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaperReference EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaperReference(PaperReference paperReference)
        {
            base.AddObject("PaperReference", paperReference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductYear EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductYear(ProductYear productYear)
        {
            base.AddObject("ProductYear", productYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rating EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRating(Rating rating)
        {
            base.AddObject("Rating", rating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToState(State state)
        {
            base.AddObject("State", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Year EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYear(Year year)
        {
            base.AddObject("Year", year);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operator EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperator(Operator @operator)
        {
            base.AddObject("Operator", @operator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Brand EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrand(Brand brand)
        {
            base.AddObject("Brand", brand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Model EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModel(Model model)
        {
            base.AddObject("Model", model);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductType(ProductType productType)
        {
            base.AddObject("ProductType", productType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubModel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubModel(SubModel subModel)
        {
            base.AddObject("SubModel", subModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandView(BrandView brandView)
        {
            base.AddObject("BrandView", brandView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandViewForUI EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandViewForUI(BrandViewForUI brandViewForUI)
        {
            base.AddObject("BrandViewForUI", brandViewForUI);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationView(LocationView locationView)
        {
            base.AddObject("LocationView", locationView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypeView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypeView(ProductTypeView productTypeView)
        {
            base.AddObject("ProductTypeView", productTypeView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModelView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModelView(ModelView modelView)
        {
            base.AddObject("ModelView", modelView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryView(CategoryView categoryView)
        {
            base.AddObject("CategoryView", categoryView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActiveCategoriesView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActiveCategoriesView(ActiveCategoriesView activeCategoriesView)
        {
            base.AddObject("ActiveCategoriesView", activeCategoriesView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypeBrandView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypeBrandView(ProductTypeBrandView productTypeBrandView)
        {
            base.AddObject("ProductTypeBrandView", productTypeBrandView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductView(ProductView productView)
        {
            base.AddObject("ProductView", productView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductStatus(ProductStatus productStatus)
        {
            base.AddObject("ProductStatus", productStatus);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ActiveCategoriesView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActiveCategoriesView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActiveCategoriesView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ActiveCategoriesView CreateActiveCategoriesView(global::System.Int32 id, global::System.String name)
        {
            ActiveCategoriesView activeCategoriesView = new ActiveCategoriesView();
            activeCategoriesView.Id = id;
            activeCategoriesView.Name = name;
            return activeCategoriesView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false, "Name");
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, "ParentId");
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static Attachment CreateAttachment(global::System.Int32 id, global::System.String fileName, global::System.String extension, global::System.String mimeType, global::System.Byte[] content, global::System.Int32 productId)
        {
            Attachment attachment = new Attachment();
            attachment.Id = id;
            attachment.FileName = fileName;
            attachment.Extension = extension;
            attachment.MimeType = mimeType;
            attachment.Content = content;
            attachment.ProductId = productId;
            return attachment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false, "FileName");
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false, "Extension");
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false, "MimeType");
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false, "Content");
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Attachment_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SpareParts.DataAccess.Models.FK_Attachment_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SpareParts.DataAccess.Models.FK_Attachment_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SpareParts.DataAccess.Models.FK_Attachment_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("SpareParts.DataAccess.Models.FK_Attachment_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Brand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Brand CreateBrand(global::System.Int32 id, global::System.String name)
        {
            Brand brand = new Brand();
            brand.Id = id;
            brand.Name = name;
            return brand;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "BrandModel", "Model")]
        public EntityCollection<Model> Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Model>("SpareParts.DataAccess.Models.BrandModel", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Model>("SpareParts.DataAccess.Models.BrandModel", "Model", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductTypeBrand", "ProductType")]
        public EntityCollection<ProductType> ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductType>("SpareParts.DataAccess.Models.ProductTypeBrand", "ProductType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductType>("SpareParts.DataAccess.Models.ProductTypeBrand", "ProductType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductBrand", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.ProductBrand", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.ProductBrand", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="BrandView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandView object.
        /// </summary>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="brandId">Initial value of the BrandId property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static BrandView CreateBrandView(global::System.Int32 productTypeId, global::System.String productType, global::System.Int32 brandId, global::System.String brand, global::System.String model)
        {
            BrandView brandView = new BrandView();
            brandView.ProductTypeId = productTypeId;
            brandView.ProductType = productType;
            brandView.BrandId = brandId;
            brandView.Brand = brand;
            brandView.Model = model;
            return brandView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                if (_ProductTypeId != value)
                {
                    OnProductTypeIdChanging(value);
                    ReportPropertyChanging("ProductTypeId");
                    _ProductTypeId = StructuralObject.SetValidValue(value, "ProductTypeId");
                    ReportPropertyChanged("ProductTypeId");
                    OnProductTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                if (_ProductType != value)
                {
                    OnProductTypeChanging(value);
                    ReportPropertyChanging("ProductType");
                    _ProductType = StructuralObject.SetValidValue(value, false, "ProductType");
                    ReportPropertyChanged("ProductType");
                    OnProductTypeChanged();
                }
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                if (_BrandId != value)
                {
                    OnBrandIdChanging(value);
                    ReportPropertyChanging("BrandId");
                    _BrandId = StructuralObject.SetValidValue(value, "BrandId");
                    ReportPropertyChanged("BrandId");
                    OnBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                if (_Brand != value)
                {
                    OnBrandChanging(value);
                    ReportPropertyChanging("Brand");
                    _Brand = StructuralObject.SetValidValue(value, false, "Brand");
                    ReportPropertyChanged("Brand");
                    OnBrandChanged();
                }
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    OnModelChanging(value);
                    ReportPropertyChanging("Model");
                    _Model = StructuralObject.SetValidValue(value, false, "Model");
                    ReportPropertyChanged("Model");
                    OnModelChanged();
                }
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="BrandViewForUI")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandViewForUI : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandViewForUI object.
        /// </summary>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="brandId">Initial value of the BrandId property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        public static BrandViewForUI CreateBrandViewForUI(global::System.Int32 productTypeId, global::System.String productType, global::System.Int32 brandId, global::System.String brand)
        {
            BrandViewForUI brandViewForUI = new BrandViewForUI();
            brandViewForUI.ProductTypeId = productTypeId;
            brandViewForUI.ProductType = productType;
            brandViewForUI.BrandId = brandId;
            brandViewForUI.Brand = brand;
            return brandViewForUI;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                if (_ProductTypeId != value)
                {
                    OnProductTypeIdChanging(value);
                    ReportPropertyChanging("ProductTypeId");
                    _ProductTypeId = StructuralObject.SetValidValue(value, "ProductTypeId");
                    ReportPropertyChanged("ProductTypeId");
                    OnProductTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                if (_ProductType != value)
                {
                    OnProductTypeChanging(value);
                    ReportPropertyChanging("ProductType");
                    _ProductType = StructuralObject.SetValidValue(value, false, "ProductType");
                    ReportPropertyChanged("ProductType");
                    OnProductTypeChanged();
                }
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                if (_BrandId != value)
                {
                    OnBrandIdChanging(value);
                    ReportPropertyChanging("BrandId");
                    _BrandId = StructuralObject.SetValidValue(value, "BrandId");
                    ReportPropertyChanged("BrandId");
                    OnBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                if (_Brand != value)
                {
                    OnBrandChanging(value);
                    ReportPropertyChanging("Brand");
                    _Brand = StructuralObject.SetValidValue(value, false, "Brand");
                    ReportPropertyChanged("Brand");
                    OnBrandChanged();
                }
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Models
        {
            get
            {
                return _Models;
            }
            set
            {
                OnModelsChanging(value);
                ReportPropertyChanging("Models");
                _Models = StructuralObject.SetValidValue(value, true, "Models");
                ReportPropertyChanged("Models");
                OnModelsChanged();
            }
        }
        private global::System.String _Models;
        partial void OnModelsChanging(global::System.String value);
        partial void OnModelsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            category.IsActive = isActive;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, "ParentId");
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductTypeCategory", "ProductType")]
        public EntityCollection<ProductType> ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductType>("SpareParts.DataAccess.Models.ProductTypeCategory", "ProductType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductType>("SpareParts.DataAccess.Models.ProductTypeCategory", "ProductType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Category_SubCategory", "Category1")]
        public EntityCollection<Category> Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("SpareParts.DataAccess.Models.FK_Category_SubCategory", "Category1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("SpareParts.DataAccess.Models.FK_Category_SubCategory", "Category1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductCategory", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.ProductCategory", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.ProductCategory", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="CategoryView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="subCategory1Id">Initial value of the SubCategory1Id property.</param>
        /// <param name="subCategory1">Initial value of the SubCategory1 property.</param>
        /// <param name="subCategory2Id">Initial value of the SubCategory2Id property.</param>
        /// <param name="subCategory2">Initial value of the SubCategory2 property.</param>
        /// <param name="subCategory1ParentId">Initial value of the SubCategory1ParentId property.</param>
        /// <param name="subCategory2ParentId">Initial value of the SubCategory2ParentId property.</param>
        public static CategoryView CreateCategoryView(global::System.Int32 id, global::System.String category, global::System.Int32 subCategory1Id, global::System.String subCategory1, global::System.Int32 subCategory2Id, global::System.String subCategory2, global::System.Int32 subCategory1ParentId, global::System.Int32 subCategory2ParentId)
        {
            CategoryView categoryView = new CategoryView();
            categoryView.Id = id;
            categoryView.Category = category;
            categoryView.SubCategory1Id = subCategory1Id;
            categoryView.SubCategory1 = subCategory1;
            categoryView.SubCategory2Id = subCategory2Id;
            categoryView.SubCategory2 = subCategory2;
            categoryView.SubCategory1ParentId = subCategory1ParentId;
            categoryView.SubCategory2ParentId = subCategory2ParentId;
            return categoryView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                if (_Category != value)
                {
                    OnCategoryChanging(value);
                    ReportPropertyChanging("Category");
                    _Category = StructuralObject.SetValidValue(value, false, "Category");
                    ReportPropertyChanged("Category");
                    OnCategoryChanged();
                }
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCategory1Id
        {
            get
            {
                return _SubCategory1Id;
            }
            set
            {
                if (_SubCategory1Id != value)
                {
                    OnSubCategory1IdChanging(value);
                    ReportPropertyChanging("SubCategory1Id");
                    _SubCategory1Id = StructuralObject.SetValidValue(value, "SubCategory1Id");
                    ReportPropertyChanged("SubCategory1Id");
                    OnSubCategory1IdChanged();
                }
            }
        }
        private global::System.Int32 _SubCategory1Id;
        partial void OnSubCategory1IdChanging(global::System.Int32 value);
        partial void OnSubCategory1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCategory1
        {
            get
            {
                return _SubCategory1;
            }
            set
            {
                if (_SubCategory1 != value)
                {
                    OnSubCategory1Changing(value);
                    ReportPropertyChanging("SubCategory1");
                    _SubCategory1 = StructuralObject.SetValidValue(value, false, "SubCategory1");
                    ReportPropertyChanged("SubCategory1");
                    OnSubCategory1Changed();
                }
            }
        }
        private global::System.String _SubCategory1;
        partial void OnSubCategory1Changing(global::System.String value);
        partial void OnSubCategory1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCategory2Id
        {
            get
            {
                return _SubCategory2Id;
            }
            set
            {
                if (_SubCategory2Id != value)
                {
                    OnSubCategory2IdChanging(value);
                    ReportPropertyChanging("SubCategory2Id");
                    _SubCategory2Id = StructuralObject.SetValidValue(value, "SubCategory2Id");
                    ReportPropertyChanged("SubCategory2Id");
                    OnSubCategory2IdChanged();
                }
            }
        }
        private global::System.Int32 _SubCategory2Id;
        partial void OnSubCategory2IdChanging(global::System.Int32 value);
        partial void OnSubCategory2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCategory2
        {
            get
            {
                return _SubCategory2;
            }
            set
            {
                if (_SubCategory2 != value)
                {
                    OnSubCategory2Changing(value);
                    ReportPropertyChanging("SubCategory2");
                    _SubCategory2 = StructuralObject.SetValidValue(value, false, "SubCategory2");
                    ReportPropertyChanged("SubCategory2");
                    OnSubCategory2Changed();
                }
            }
        }
        private global::System.String _SubCategory2;
        partial void OnSubCategory2Changing(global::System.String value);
        partial void OnSubCategory2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, "ParentId");
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCategory1ParentId
        {
            get
            {
                return _SubCategory1ParentId;
            }
            set
            {
                if (_SubCategory1ParentId != value)
                {
                    OnSubCategory1ParentIdChanging(value);
                    ReportPropertyChanging("SubCategory1ParentId");
                    _SubCategory1ParentId = StructuralObject.SetValidValue(value, "SubCategory1ParentId");
                    ReportPropertyChanged("SubCategory1ParentId");
                    OnSubCategory1ParentIdChanged();
                }
            }
        }
        private global::System.Int32 _SubCategory1ParentId;
        partial void OnSubCategory1ParentIdChanging(global::System.Int32 value);
        partial void OnSubCategory1ParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCategory2ParentId
        {
            get
            {
                return _SubCategory2ParentId;
            }
            set
            {
                if (_SubCategory2ParentId != value)
                {
                    OnSubCategory2ParentIdChanging(value);
                    ReportPropertyChanging("SubCategory2ParentId");
                    _SubCategory2ParentId = StructuralObject.SetValidValue(value, "SubCategory2ParentId");
                    ReportPropertyChanged("SubCategory2ParentId");
                    OnSubCategory2ParentIdChanged();
                }
            }
        }
        private global::System.Int32 _SubCategory2ParentId;
        partial void OnSubCategory2ParentIdChanging(global::System.Int32 value);
        partial void OnSubCategory2ParentIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static City CreateCity(global::System.Int32 id, global::System.String name, global::System.Int32 countryId)
        {
            City city = new City();
            city.Id = id;
            city.Name = name;
            city.CountryId = countryId;
            return city;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_City_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SpareParts.DataAccess.Models.FK_City_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SpareParts.DataAccess.Models.FK_City_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SpareParts.DataAccess.Models.FK_City_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("SpareParts.DataAccess.Models.FK_City_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_City", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_City", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_City", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_City_Country", "City")]
        public EntityCollection<City> City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("SpareParts.DataAccess.Models.FK_City_Country", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("SpareParts.DataAccess.Models.FK_City_Country", "City", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="customerTypeId">Initial value of the CustomerTypeId property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.Int32 customerTypeId)
        {
            Customer customer = new Customer();
            customer.Id = id;
            customer.FirstName = firstName;
            customer.LastName = lastName;
            customer.CustomerTypeId = customerTypeId;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true, "Mobile");
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerTypeId
        {
            get
            {
                return _CustomerTypeId;
            }
            set
            {
                OnCustomerTypeIdChanging(value);
                ReportPropertyChanging("CustomerTypeId");
                _CustomerTypeId = StructuralObject.SetValidValue(value, "CustomerTypeId");
                ReportPropertyChanged("CustomerTypeId");
                OnCustomerTypeIdChanged();
            }
        }
        private global::System.Int32 _CustomerTypeId;
        partial void OnCustomerTypeIdChanging(global::System.Int32 value);
        partial void OnCustomerTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Customer_CustomerType", "CustomerType")]
        public CustomerType CustomerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("SpareParts.DataAccess.Models.FK_Customer_CustomerType", "CustomerType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("SpareParts.DataAccess.Models.FK_Customer_CustomerType", "CustomerType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerType> CustomerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("SpareParts.DataAccess.Models.FK_Customer_CustomerType", "CustomerType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerType>("SpareParts.DataAccess.Models.FK_Customer_CustomerType", "CustomerType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_Buyer", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_Buyer", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_Buyer", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_CustomerCreator", "Product")]
        public EntityCollection<Product> Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_CustomerCreator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_CustomerCreator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_OrderCustomer", "Product")]
        public EntityCollection<Product> Product2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_OrderCustomer", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_OrderCustomer", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="CustomerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CustomerType CreateCustomerType(global::System.Int32 id, global::System.String name)
        {
            CustomerType customerType = new CustomerType();
            customerType.Id = id;
            customerType.Name = name;
            return customerType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Customer_CustomerType", "Customer")]
        public EntityCollection<Customer> Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("SpareParts.DataAccess.Models.FK_Customer_CustomerType", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("SpareParts.DataAccess.Models.FK_Customer_CustomerType", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String name)
        {
            Item item = new Item();
            item.Id = id;
            item.Name = name;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_Item", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_Item", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_Item", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="LocationView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static LocationView CreateLocationView(global::System.Int32 id, global::System.String location)
        {
            LocationView locationView = new LocationView();
            locationView.Id = id;
            locationView.Location = location;
            return locationView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                if (_Location != value)
                {
                    OnLocationChanging(value);
                    ReportPropertyChanging("Location");
                    _Location = StructuralObject.SetValidValue(value, false, "Location");
                    ReportPropertyChanged("Location");
                    OnLocationChanged();
                }
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Model")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Model : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Model object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Model CreateModel(global::System.Int32 id, global::System.String name)
        {
            Model model = new Model();
            model.Id = id;
            model.Name = name;
            return model;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "BrandModel", "Brand")]
        public EntityCollection<Brand> Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Brand>("SpareParts.DataAccess.Models.BrandModel", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Brand>("SpareParts.DataAccess.Models.BrandModel", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ModelSubModel", "SubModel")]
        public EntityCollection<SubModel> SubModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubModel>("SpareParts.DataAccess.Models.ModelSubModel", "SubModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubModel>("SpareParts.DataAccess.Models.ModelSubModel", "SubModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductModel", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.ProductModel", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.ProductModel", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ModelView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModelView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModelView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="subModelId">Initial value of the SubModelId property.</param>
        /// <param name="subModel">Initial value of the SubModel property.</param>
        public static ModelView CreateModelView(global::System.Int32 id, global::System.String model, global::System.Int32 subModelId, global::System.String subModel)
        {
            ModelView modelView = new ModelView();
            modelView.Id = id;
            modelView.Model = model;
            modelView.SubModelId = subModelId;
            modelView.SubModel = subModel;
            return modelView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    OnModelChanging(value);
                    ReportPropertyChanging("Model");
                    _Model = StructuralObject.SetValidValue(value, false, "Model");
                    ReportPropertyChanged("Model");
                    OnModelChanged();
                }
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubModelId
        {
            get
            {
                return _SubModelId;
            }
            set
            {
                if (_SubModelId != value)
                {
                    OnSubModelIdChanging(value);
                    ReportPropertyChanging("SubModelId");
                    _SubModelId = StructuralObject.SetValidValue(value, "SubModelId");
                    ReportPropertyChanged("SubModelId");
                    OnSubModelIdChanged();
                }
            }
        }
        private global::System.Int32 _SubModelId;
        partial void OnSubModelIdChanging(global::System.Int32 value);
        partial void OnSubModelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubModel
        {
            get
            {
                return _SubModel;
            }
            set
            {
                if (_SubModel != value)
                {
                    OnSubModelChanging(value);
                    ReportPropertyChanging("SubModel");
                    _SubModel = StructuralObject.SetValidValue(value, false, "SubModel");
                    ReportPropertyChanged("SubModel");
                    OnSubModelChanged();
                }
            }
        }
        private global::System.String _SubModel;
        partial void OnSubModelChanging(global::System.String value);
        partial void OnSubModelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Operator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operator object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="profilesId">Initial value of the ProfilesId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static Operator CreateOperator(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.Int32 profilesId, global::System.String password, global::System.Boolean enabled)
        {
            Operator @operator = new Operator();
            @operator.Id = id;
            @operator.FirstName = firstName;
            @operator.LastName = lastName;
            @operator.ProfilesId = profilesId;
            @operator.Password = password;
            @operator.Enabled = enabled;
            return @operator;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true, "Mobile");
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfilesId
        {
            get
            {
                return _ProfilesId;
            }
            set
            {
                OnProfilesIdChanging(value);
                ReportPropertyChanging("ProfilesId");
                _ProfilesId = StructuralObject.SetValidValue(value, "ProfilesId");
                ReportPropertyChanged("ProfilesId");
                OnProfilesIdChanged();
            }
        }
        private global::System.Int32 _ProfilesId;
        partial void OnProfilesIdChanging(global::System.Int32 value);
        partial void OnProfilesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value, "Enabled");
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ComplaintOperator", "Product")]
        public EntityCollection<Product> ComplaintOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ComplaintOperator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ComplaintOperator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_OperatorCreator", "Product")]
        public EntityCollection<Product> CreatorOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_OperatorCreator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_OperatorCreator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_OrderOperator", "Product")]
        public EntityCollection<Product> OrderOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_OrderOperator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_OrderOperator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ReplaceOperator", "Product")]
        public EntityCollection<Product> ReplaceOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ReplaceOperator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ReplaceOperator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_RequestOperator", "Product")]
        public EntityCollection<Product> RequestOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_RequestOperator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_RequestOperator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ReturnOperator", "Product")]
        public EntityCollection<Product> ReturnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ReturnOperator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ReturnOperator", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_SellingOperator", "Product")]
        public EntityCollection<Product> SellingOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_SellingOperator", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_SellingOperator", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="PaperReference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaperReference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaperReference object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PaperReference CreatePaperReference(global::System.Int32 id, global::System.String name)
        {
            PaperReference paperReference = new PaperReference();
            paperReference.Id = id;
            paperReference.Name = name;
            return paperReference;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_PaperReference", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_PaperReference", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_PaperReference", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="operatorId">Initial value of the OperatorId property.</param>
        /// <param name="depositBuyDate">Initial value of the DepositBuyDate property.</param>
        /// <param name="sold">Initial value of the Sold property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.Int32 itemId, global::System.Int32 productTypeId, global::System.Int32 locationId, global::System.Int32 customerId, global::System.Int32 operatorId, global::System.DateTime depositBuyDate, global::System.Boolean sold, global::System.Int32 stateId, global::System.Int32 statusId)
        {
            Product product = new Product();
            product.Id = id;
            product.ItemId = itemId;
            product.ProductTypeId = productTypeId;
            product.LocationId = locationId;
            product.CustomerId = customerId;
            product.OperatorId = operatorId;
            product.DepositBuyDate = depositBuyDate;
            product.Sold = sold;
            product.StateId = stateId;
            product.StatusId = statusId;
            return product;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                OnProductTypeIdChanging(value);
                ReportPropertyChanging("ProductTypeId");
                _ProductTypeId = StructuralObject.SetValidValue(value, "ProductTypeId");
                ReportPropertyChanged("ProductTypeId");
                OnProductTypeIdChanged();
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaperReferenceId
        {
            get
            {
                return _PaperReferenceId;
            }
            set
            {
                OnPaperReferenceIdChanging(value);
                ReportPropertyChanging("PaperReferenceId");
                _PaperReferenceId = StructuralObject.SetValidValue(value, "PaperReferenceId");
                ReportPropertyChanged("PaperReferenceId");
                OnPaperReferenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaperReferenceId;
        partial void OnPaperReferenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaperReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value, "LocationId");
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StockLocation
        {
            get
            {
                return _StockLocation;
            }
            set
            {
                OnStockLocationChanging(value);
                ReportPropertyChanging("StockLocation");
                _StockLocation = StructuralObject.SetValidValue(value, true, "StockLocation");
                ReportPropertyChanged("StockLocation");
                OnStockLocationChanged();
            }
        }
        private global::System.String _StockLocation;
        partial void OnStockLocationChanging(global::System.String value);
        partial void OnStockLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, "CustomerId");
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperatorId
        {
            get
            {
                return _OperatorId;
            }
            set
            {
                OnOperatorIdChanging(value);
                ReportPropertyChanging("OperatorId");
                _OperatorId = StructuralObject.SetValidValue(value, "OperatorId");
                ReportPropertyChanged("OperatorId");
                OnOperatorIdChanged();
            }
        }
        private global::System.Int32 _OperatorId;
        partial void OnOperatorIdChanging(global::System.Int32 value);
        partial void OnOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RatingId
        {
            get
            {
                return _RatingId;
            }
            set
            {
                OnRatingIdChanging(value);
                ReportPropertyChanging("RatingId");
                _RatingId = StructuralObject.SetValidValue(value, "RatingId");
                ReportPropertyChanged("RatingId");
                OnRatingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RatingId;
        partial void OnRatingIdChanging(Nullable<global::System.Int32> value);
        partial void OnRatingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepositBuyDate
        {
            get
            {
                return _DepositBuyDate;
            }
            set
            {
                OnDepositBuyDateChanging(value);
                ReportPropertyChanging("DepositBuyDate");
                _DepositBuyDate = StructuralObject.SetValidValue(value, "DepositBuyDate");
                ReportPropertyChanged("DepositBuyDate");
                OnDepositBuyDateChanged();
            }
        }
        private global::System.DateTime _DepositBuyDate;
        partial void OnDepositBuyDateChanging(global::System.DateTime value);
        partial void OnDepositBuyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BuyingPrice
        {
            get
            {
                return _BuyingPrice;
            }
            set
            {
                OnBuyingPriceChanging(value);
                ReportPropertyChanging("BuyingPrice");
                _BuyingPrice = StructuralObject.SetValidValue(value, "BuyingPrice");
                ReportPropertyChanged("BuyingPrice");
                OnBuyingPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _BuyingPrice;
        partial void OnBuyingPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnBuyingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sold
        {
            get
            {
                return _Sold;
            }
            set
            {
                OnSoldChanging(value);
                ReportPropertyChanging("Sold");
                _Sold = StructuralObject.SetValidValue(value, "Sold");
                ReportPropertyChanged("Sold");
                OnSoldChanged();
            }
        }
        private global::System.Boolean _Sold;
        partial void OnSoldChanging(global::System.Boolean value);
        partial void OnSoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                OnSellPriceChanging(value);
                ReportPropertyChanging("SellPrice");
                _SellPrice = StructuralObject.SetValidValue(value, "SellPrice");
                ReportPropertyChanged("SellPrice");
                OnSellPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SellPrice;
        partial void OnSellPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SellingOperatorId
        {
            get
            {
                return _SellingOperatorId;
            }
            set
            {
                OnSellingOperatorIdChanging(value);
                ReportPropertyChanging("SellingOperatorId");
                _SellingOperatorId = StructuralObject.SetValidValue(value, "SellingOperatorId");
                ReportPropertyChanged("SellingOperatorId");
                OnSellingOperatorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SellingOperatorId;
        partial void OnSellingOperatorIdChanging(Nullable<global::System.Int32> value);
        partial void OnSellingOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BuyerId
        {
            get
            {
                return _BuyerId;
            }
            set
            {
                OnBuyerIdChanging(value);
                ReportPropertyChanging("BuyerId");
                _BuyerId = StructuralObject.SetValidValue(value, "BuyerId");
                ReportPropertyChanged("BuyerId");
                OnBuyerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BuyerId;
        partial void OnBuyerIdChanging(Nullable<global::System.Int32> value);
        partial void OnBuyerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Mecanic
        {
            get
            {
                return _Mecanic;
            }
            set
            {
                OnMecanicChanging(value);
                ReportPropertyChanging("Mecanic");
                _Mecanic = StructuralObject.SetValidValue(value, "Mecanic");
                ReportPropertyChanged("Mecanic");
                OnMecanicChanged();
            }
        }
        private Nullable<global::System.Boolean> _Mecanic;
        partial void OnMecanicChanging(Nullable<global::System.Boolean> value);
        partial void OnMecanicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SellingDate
        {
            get
            {
                return _SellingDate;
            }
            set
            {
                OnSellingDateChanging(value);
                ReportPropertyChanging("SellingDate");
                _SellingDate = StructuralObject.SetValidValue(value, "SellingDate");
                ReportPropertyChanged("SellingDate");
                OnSellingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SellingDate;
        partial void OnSellingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSellingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleIdentificationNumber
        {
            get
            {
                return _VehicleIdentificationNumber;
            }
            set
            {
                OnVehicleIdentificationNumberChanging(value);
                ReportPropertyChanging("VehicleIdentificationNumber");
                _VehicleIdentificationNumber = StructuralObject.SetValidValue(value, true, "VehicleIdentificationNumber");
                ReportPropertyChanged("VehicleIdentificationNumber");
                OnVehicleIdentificationNumberChanged();
            }
        }
        private global::System.String _VehicleIdentificationNumber;
        partial void OnVehicleIdentificationNumberChanging(global::System.String value);
        partial void OnVehicleIdentificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarIdentificationNumber
        {
            get
            {
                return _CarIdentificationNumber;
            }
            set
            {
                OnCarIdentificationNumberChanging(value);
                ReportPropertyChanging("CarIdentificationNumber");
                _CarIdentificationNumber = StructuralObject.SetValidValue(value, true, "CarIdentificationNumber");
                ReportPropertyChanged("CarIdentificationNumber");
                OnCarIdentificationNumberChanged();
            }
        }
        private global::System.String _CarIdentificationNumber;
        partial void OnCarIdentificationNumberChanging(global::System.String value);
        partial void OnCarIdentificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasComplaint
        {
            get
            {
                return _HasComplaint;
            }
            set
            {
                OnHasComplaintChanging(value);
                ReportPropertyChanging("HasComplaint");
                _HasComplaint = StructuralObject.SetValidValue(value, "HasComplaint");
                ReportPropertyChanged("HasComplaint");
                OnHasComplaintChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasComplaint;
        partial void OnHasComplaintChanging(Nullable<global::System.Boolean> value);
        partial void OnHasComplaintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComplaintOperatorId
        {
            get
            {
                return _ComplaintOperatorId;
            }
            set
            {
                OnComplaintOperatorIdChanging(value);
                ReportPropertyChanging("ComplaintOperatorId");
                _ComplaintOperatorId = StructuralObject.SetValidValue(value, "ComplaintOperatorId");
                ReportPropertyChanged("ComplaintOperatorId");
                OnComplaintOperatorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ComplaintOperatorId;
        partial void OnComplaintOperatorIdChanging(Nullable<global::System.Int32> value);
        partial void OnComplaintOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ComplaintDate
        {
            get
            {
                return _ComplaintDate;
            }
            set
            {
                OnComplaintDateChanging(value);
                ReportPropertyChanging("ComplaintDate");
                _ComplaintDate = StructuralObject.SetValidValue(value, "ComplaintDate");
                ReportPropertyChanged("ComplaintDate");
                OnComplaintDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ComplaintDate;
        partial void OnComplaintDateChanging(Nullable<global::System.DateTime> value);
        partial void OnComplaintDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReturn
        {
            get
            {
                return _IsReturn;
            }
            set
            {
                OnIsReturnChanging(value);
                ReportPropertyChanging("IsReturn");
                _IsReturn = StructuralObject.SetValidValue(value, "IsReturn");
                ReportPropertyChanged("IsReturn");
                OnIsReturnChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReturn;
        partial void OnIsReturnChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReturnOperatorId
        {
            get
            {
                return _ReturnOperatorId;
            }
            set
            {
                OnReturnOperatorIdChanging(value);
                ReportPropertyChanging("ReturnOperatorId");
                _ReturnOperatorId = StructuralObject.SetValidValue(value, "ReturnOperatorId");
                ReportPropertyChanged("ReturnOperatorId");
                OnReturnOperatorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReturnOperatorId;
        partial void OnReturnOperatorIdChanging(Nullable<global::System.Int32> value);
        partial void OnReturnOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturnDate
        {
            get
            {
                return _ReturnDate;
            }
            set
            {
                OnReturnDateChanging(value);
                ReportPropertyChanging("ReturnDate");
                _ReturnDate = StructuralObject.SetValidValue(value, "ReturnDate");
                ReportPropertyChanged("ReturnDate");
                OnReturnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturnDate;
        partial void OnReturnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReturnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReplace
        {
            get
            {
                return _IsReplace;
            }
            set
            {
                OnIsReplaceChanging(value);
                ReportPropertyChanging("IsReplace");
                _IsReplace = StructuralObject.SetValidValue(value, "IsReplace");
                ReportPropertyChanged("IsReplace");
                OnIsReplaceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReplace;
        partial void OnIsReplaceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReplaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReplaceOperatorId
        {
            get
            {
                return _ReplaceOperatorId;
            }
            set
            {
                OnReplaceOperatorIdChanging(value);
                ReportPropertyChanging("ReplaceOperatorId");
                _ReplaceOperatorId = StructuralObject.SetValidValue(value, "ReplaceOperatorId");
                ReportPropertyChanged("ReplaceOperatorId");
                OnReplaceOperatorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReplaceOperatorId;
        partial void OnReplaceOperatorIdChanging(Nullable<global::System.Int32> value);
        partial void OnReplaceOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReplaceDate
        {
            get
            {
                return _ReplaceDate;
            }
            set
            {
                OnReplaceDateChanging(value);
                ReportPropertyChanging("ReplaceDate");
                _ReplaceDate = StructuralObject.SetValidValue(value, "ReplaceDate");
                ReportPropertyChanged("ReplaceDate");
                OnReplaceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReplaceDate;
        partial void OnReplaceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReplaceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReplacedProductId
        {
            get
            {
                return _ReplacedProductId;
            }
            set
            {
                OnReplacedProductIdChanging(value);
                ReportPropertyChanging("ReplacedProductId");
                _ReplacedProductId = StructuralObject.SetValidValue(value, "ReplacedProductId");
                ReportPropertyChanged("ReplacedProductId");
                OnReplacedProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReplacedProductId;
        partial void OnReplacedProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnReplacedProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReimbursed
        {
            get
            {
                return _IsReimbursed;
            }
            set
            {
                OnIsReimbursedChanging(value);
                ReportPropertyChanging("IsReimbursed");
                _IsReimbursed = StructuralObject.SetValidValue(value, "IsReimbursed");
                ReportPropertyChanged("IsReimbursed");
                OnIsReimbursedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReimbursed;
        partial void OnIsReimbursedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReimbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAvailable
        {
            get
            {
                return _IsAvailable;
            }
            set
            {
                OnIsAvailableChanging(value);
                ReportPropertyChanging("IsAvailable");
                _IsAvailable = StructuralObject.SetValidValue(value, "IsAvailable");
                ReportPropertyChanged("IsAvailable");
                OnIsAvailableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAvailable;
        partial void OnIsAvailableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestNumber
        {
            get
            {
                return _RequestNumber;
            }
            set
            {
                OnRequestNumberChanging(value);
                ReportPropertyChanging("RequestNumber");
                _RequestNumber = StructuralObject.SetValidValue(value, true, "RequestNumber");
                ReportPropertyChanged("RequestNumber");
                OnRequestNumberChanged();
            }
        }
        private global::System.String _RequestNumber;
        partial void OnRequestNumberChanging(global::System.String value);
        partial void OnRequestNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value, "RequestDate");
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestDate;
        partial void OnRequestDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestOperatorId
        {
            get
            {
                return _RequestOperatorId;
            }
            set
            {
                OnRequestOperatorIdChanging(value);
                ReportPropertyChanging("RequestOperatorId");
                _RequestOperatorId = StructuralObject.SetValidValue(value, "RequestOperatorId");
                ReportPropertyChanged("RequestOperatorId");
                OnRequestOperatorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestOperatorId;
        partial void OnRequestOperatorIdChanging(Nullable<global::System.Int32> value);
        partial void OnRequestOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasOrder
        {
            get
            {
                return _HasOrder;
            }
            set
            {
                OnHasOrderChanging(value);
                ReportPropertyChanging("HasOrder");
                _HasOrder = StructuralObject.SetValidValue(value, "HasOrder");
                ReportPropertyChanged("HasOrder");
                OnHasOrderChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasOrder;
        partial void OnHasOrderChanging(Nullable<global::System.Boolean> value);
        partial void OnHasOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value, true, "OrderNumber");
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.String _OrderNumber;
        partial void OnOrderNumberChanging(global::System.String value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value, "OrderDate");
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderDate;
        partial void OnOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderOperatorId
        {
            get
            {
                return _OrderOperatorId;
            }
            set
            {
                OnOrderOperatorIdChanging(value);
                ReportPropertyChanging("OrderOperatorId");
                _OrderOperatorId = StructuralObject.SetValidValue(value, "OrderOperatorId");
                ReportPropertyChanged("OrderOperatorId");
                OnOrderOperatorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderOperatorId;
        partial void OnOrderOperatorIdChanging(Nullable<global::System.Int32> value);
        partial void OnOrderOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderCustomerId
        {
            get
            {
                return _OrderCustomerId;
            }
            set
            {
                OnOrderCustomerIdChanging(value);
                ReportPropertyChanging("OrderCustomerId");
                _OrderCustomerId = StructuralObject.SetValidValue(value, "OrderCustomerId");
                ReportPropertyChanged("OrderCustomerId");
                OnOrderCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderCustomerId;
        partial void OnOrderCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnOrderCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OrderSellingPrice
        {
            get
            {
                return _OrderSellingPrice;
            }
            set
            {
                OnOrderSellingPriceChanging(value);
                ReportPropertyChanging("OrderSellingPrice");
                _OrderSellingPrice = StructuralObject.SetValidValue(value, "OrderSellingPrice");
                ReportPropertyChanged("OrderSellingPrice");
                OnOrderSellingPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _OrderSellingPrice;
        partial void OnOrderSellingPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnOrderSellingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AdvancePaymentAmount
        {
            get
            {
                return _AdvancePaymentAmount;
            }
            set
            {
                OnAdvancePaymentAmountChanging(value);
                ReportPropertyChanging("AdvancePaymentAmount");
                _AdvancePaymentAmount = StructuralObject.SetValidValue(value, "AdvancePaymentAmount");
                ReportPropertyChanged("AdvancePaymentAmount");
                OnAdvancePaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _AdvancePaymentAmount;
        partial void OnAdvancePaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAdvancePaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EstimatedDeliveryDate
        {
            get
            {
                return _EstimatedDeliveryDate;
            }
            set
            {
                OnEstimatedDeliveryDateChanging(value);
                ReportPropertyChanging("EstimatedDeliveryDate");
                _EstimatedDeliveryDate = StructuralObject.SetValidValue(value, "EstimatedDeliveryDate");
                ReportPropertyChanged("EstimatedDeliveryDate");
                OnEstimatedDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EstimatedDeliveryDate;
        partial void OnEstimatedDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEstimatedDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinalDate
        {
            get
            {
                return _FinalDate;
            }
            set
            {
                OnFinalDateChanging(value);
                ReportPropertyChanging("FinalDate");
                _FinalDate = StructuralObject.SetValidValue(value, "FinalDate");
                ReportPropertyChanged("FinalDate");
                OnFinalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinalDate;
        partial void OnFinalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFinalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BalanceAmount
        {
            get
            {
                return _BalanceAmount;
            }
            set
            {
                OnBalanceAmountChanging(value);
                ReportPropertyChanging("BalanceAmount");
                _BalanceAmount = StructuralObject.SetValidValue(value, "BalanceAmount");
                ReportPropertyChanged("BalanceAmount");
                OnBalanceAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BalanceAmount;
        partial void OnBalanceAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value, "StatusId");
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Attachment_Product", "Attachment")]
        public EntityCollection<Attachment> Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("SpareParts.DataAccess.Models.FK_Attachment_Product", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("SpareParts.DataAccess.Models.FK_Attachment_Product", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("SpareParts.DataAccess.Models.FK_Product_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("SpareParts.DataAccess.Models.FK_Product_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("SpareParts.DataAccess.Models.FK_Product_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("SpareParts.DataAccess.Models.FK_Product_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_Buyer", "Customer")]
        public Customer ProductBuyer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_Buyer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_Buyer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> ProductBuyerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_Buyer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_Buyer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_CustomerCreator", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_CustomerCreator", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_CustomerCreator", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_CustomerCreator", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_CustomerCreator", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_OrderCustomer", "Customer")]
        public Customer OrderCustomer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_OrderCustomer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_OrderCustomer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> OrderCustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_OrderCustomer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("SpareParts.DataAccess.Models.FK_Product_OrderCustomer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SpareParts.DataAccess.Models.FK_Product_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SpareParts.DataAccess.Models.FK_Product_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SpareParts.DataAccess.Models.FK_Product_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("SpareParts.DataAccess.Models.FK_Product_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_PaperReference", "PaperReference")]
        public PaperReference PaperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaperReference>("SpareParts.DataAccess.Models.FK_Product_PaperReference", "PaperReference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaperReference>("SpareParts.DataAccess.Models.FK_Product_PaperReference", "PaperReference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaperReference> PaperReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaperReference>("SpareParts.DataAccess.Models.FK_Product_PaperReference", "PaperReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaperReference>("SpareParts.DataAccess.Models.FK_Product_PaperReference", "PaperReference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ComplaintOperator", "Operator")]
        public Operator ComplaintOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ComplaintOperator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ComplaintOperator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> ComplaintOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ComplaintOperator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ComplaintOperator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_OperatorCreator", "Operator")]
        public Operator CreateOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OperatorCreator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OperatorCreator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> CreateOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OperatorCreator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OperatorCreator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_OrderOperator", "Operator")]
        public Operator OrderOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OrderOperator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OrderOperator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> OrderOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OrderOperator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_OrderOperator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ProductType", "ProductType")]
        public ProductType ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("SpareParts.DataAccess.Models.FK_Product_ProductType", "ProductType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("SpareParts.DataAccess.Models.FK_Product_ProductType", "ProductType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductType> ProductTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("SpareParts.DataAccess.Models.FK_Product_ProductType", "ProductType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductType>("SpareParts.DataAccess.Models.FK_Product_ProductType", "ProductType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_Rating", "Rating")]
        public Rating Rating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rating>("SpareParts.DataAccess.Models.FK_Product_Rating", "Rating").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rating>("SpareParts.DataAccess.Models.FK_Product_Rating", "Rating").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rating> RatingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rating>("SpareParts.DataAccess.Models.FK_Product_Rating", "Rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rating>("SpareParts.DataAccess.Models.FK_Product_Rating", "Rating", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ReplaceOperator", "Operator")]
        public Operator ReplaceOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReplaceOperator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReplaceOperator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> ReplaceOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReplaceOperator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReplaceOperator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_RequestOperator", "Operator")]
        public Operator RequestOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_RequestOperator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_RequestOperator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> RequestOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_RequestOperator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_RequestOperator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ReturnOperator", "Operator")]
        public Operator ReturnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReturnOperator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReturnOperator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> ReturnOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReturnOperator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_ReturnOperator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_SellingOperator", "Operator")]
        public Operator SellingOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_SellingOperator", "Operator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_SellingOperator", "Operator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operator> SellingOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_SellingOperator", "Operator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operator>("SpareParts.DataAccess.Models.FK_Product_SellingOperator", "Operator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SpareParts.DataAccess.Models.FK_Product_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SpareParts.DataAccess.Models.FK_Product_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SpareParts.DataAccess.Models.FK_Product_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("SpareParts.DataAccess.Models.FK_Product_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_ProductYear_Product", "ProductYear")]
        public EntityCollection<ProductYear> ProductYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductYear>("SpareParts.DataAccess.Models.FK_ProductYear_Product", "ProductYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductYear>("SpareParts.DataAccess.Models.FK_ProductYear_Product", "ProductYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductBrand", "Brand")]
        public EntityCollection<Brand> Brands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Brand>("SpareParts.DataAccess.Models.ProductBrand", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Brand>("SpareParts.DataAccess.Models.ProductBrand", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductCategory", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("SpareParts.DataAccess.Models.ProductCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("SpareParts.DataAccess.Models.ProductCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductModel", "Model")]
        public EntityCollection<Model> Models
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Model>("SpareParts.DataAccess.Models.ProductModel", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Model>("SpareParts.DataAccess.Models.ProductModel", "Model", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ProductStatus", "ProductStatus")]
        public ProductStatus ProductStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStatus>("SpareParts.DataAccess.Models.FK_Product_ProductStatus", "ProductStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStatus>("SpareParts.DataAccess.Models.FK_Product_ProductStatus", "ProductStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductStatus> ProductStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStatus>("SpareParts.DataAccess.Models.FK_Product_ProductStatus", "ProductStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductStatus>("SpareParts.DataAccess.Models.FK_Product_ProductStatus", "ProductStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ProductStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductStatus CreateProductStatus(global::System.Int32 id, global::System.String name)
        {
            ProductStatus productStatus = new ProductStatus();
            productStatus.Id = id;
            productStatus.Name = name;
            return productStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ProductStatus", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ProductStatus", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ProductStatus", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ProductType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductType CreateProductType(global::System.Int32 id, global::System.String name)
        {
            ProductType productType = new ProductType();
            productType.Id = id;
            productType.Name = name;
            return productType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductTypeBrand", "Brand")]
        public EntityCollection<Brand> Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Brand>("SpareParts.DataAccess.Models.ProductTypeBrand", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Brand>("SpareParts.DataAccess.Models.ProductTypeBrand", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ProductTypeCategory", "Category")]
        public EntityCollection<Category> Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("SpareParts.DataAccess.Models.ProductTypeCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("SpareParts.DataAccess.Models.ProductTypeCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_ProductType", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ProductType", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_ProductType", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ProductTypeBrandView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductTypeBrandView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductTypeBrandView object.
        /// </summary>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="brands">Initial value of the Brands property.</param>
        public static ProductTypeBrandView CreateProductTypeBrandView(global::System.Int32 productTypeId, global::System.String productType, global::System.String brands)
        {
            ProductTypeBrandView productTypeBrandView = new ProductTypeBrandView();
            productTypeBrandView.ProductTypeId = productTypeId;
            productTypeBrandView.ProductType = productType;
            productTypeBrandView.Brands = brands;
            return productTypeBrandView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                if (_ProductTypeId != value)
                {
                    OnProductTypeIdChanging(value);
                    ReportPropertyChanging("ProductTypeId");
                    _ProductTypeId = StructuralObject.SetValidValue(value, "ProductTypeId");
                    ReportPropertyChanged("ProductTypeId");
                    OnProductTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                if (_ProductType != value)
                {
                    OnProductTypeChanging(value);
                    ReportPropertyChanging("ProductType");
                    _ProductType = StructuralObject.SetValidValue(value, false, "ProductType");
                    ReportPropertyChanged("ProductType");
                    OnProductTypeChanged();
                }
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brands
        {
            get
            {
                return _Brands;
            }
            set
            {
                if (_Brands != value)
                {
                    OnBrandsChanging(value);
                    ReportPropertyChanging("Brands");
                    _Brands = StructuralObject.SetValidValue(value, false, "Brands");
                    ReportPropertyChanged("Brands");
                    OnBrandsChanged();
                }
            }
        }
        private global::System.String _Brands;
        partial void OnBrandsChanging(global::System.String value);
        partial void OnBrandsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ProductTypeView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductTypeView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductTypeView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="brands">Initial value of the Brands property.</param>
        /// <param name="categories">Initial value of the Categories property.</param>
        public static ProductTypeView CreateProductTypeView(global::System.Int32 id, global::System.String name, global::System.String brands, global::System.String categories)
        {
            ProductTypeView productTypeView = new ProductTypeView();
            productTypeView.Id = id;
            productTypeView.Name = name;
            productTypeView.Brands = brands;
            productTypeView.Categories = categories;
            return productTypeView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false, "Name");
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brands
        {
            get
            {
                return _Brands;
            }
            set
            {
                if (_Brands != value)
                {
                    OnBrandsChanging(value);
                    ReportPropertyChanging("Brands");
                    _Brands = StructuralObject.SetValidValue(value, false, "Brands");
                    ReportPropertyChanged("Brands");
                    OnBrandsChanged();
                }
            }
        }
        private global::System.String _Brands;
        partial void OnBrandsChanging(global::System.String value);
        partial void OnBrandsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Categories
        {
            get
            {
                return _Categories;
            }
            set
            {
                if (_Categories != value)
                {
                    OnCategoriesChanging(value);
                    ReportPropertyChanging("Categories");
                    _Categories = StructuralObject.SetValidValue(value, false, "Categories");
                    ReportPropertyChanged("Categories");
                    OnCategoriesChanged();
                }
            }
        }
        private global::System.String _Categories;
        partial void OnCategoriesChanging(global::System.String value);
        partial void OnCategoriesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ProductView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductView object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="sellPrice">Initial value of the SellPrice property.</param>
        /// <param name="buyingPrice">Initial value of the BuyingPrice property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="years">Initial value of the Years property.</param>
        /// <param name="item">Initial value of the Item property.</param>
        /// <param name="vIN">Initial value of the VIN property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="sold">Initial value of the Sold property.</param>
        /// <param name="hasOrder">Initial value of the HasOrder property.</param>
        /// <param name="isReimbursed">Initial value of the IsReimbursed property.</param>
        /// <param name="isReplace">Initial value of the IsReplace property.</param>
        /// <param name="isReturn">Initial value of the IsReturn property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static ProductView CreateProductView(global::System.Int32 productId, global::System.Decimal sellPrice, global::System.Decimal buyingPrice, global::System.String brand, global::System.String country, global::System.String city, global::System.String model, global::System.String category, global::System.String years, global::System.String item, global::System.String vIN, global::System.String productType, global::System.String state, global::System.Boolean sold, global::System.Boolean hasOrder, global::System.Boolean isReimbursed, global::System.Boolean isReplace, global::System.Boolean isReturn, global::System.Int32 status, global::System.String statusName)
        {
            ProductView productView = new ProductView();
            productView.ProductId = productId;
            productView.SellPrice = sellPrice;
            productView.BuyingPrice = buyingPrice;
            productView.Brand = brand;
            productView.Country = country;
            productView.City = city;
            productView.Model = model;
            productView.Category = category;
            productView.Years = years;
            productView.Item = item;
            productView.VIN = vIN;
            productView.ProductType = productType;
            productView.State = state;
            productView.Sold = sold;
            productView.HasOrder = hasOrder;
            productView.IsReimbursed = isReimbursed;
            productView.IsReplace = isReplace;
            productView.IsReturn = isReturn;
            productView.Status = status;
            productView.StatusName = statusName;
            return productView;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                if (_SellPrice != value)
                {
                    OnSellPriceChanging(value);
                    ReportPropertyChanging("SellPrice");
                    _SellPrice = StructuralObject.SetValidValue(value, "SellPrice");
                    ReportPropertyChanged("SellPrice");
                    OnSellPriceChanged();
                }
            }
        }
        private global::System.Decimal _SellPrice;
        partial void OnSellPriceChanging(global::System.Decimal value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BuyingPrice
        {
            get
            {
                return _BuyingPrice;
            }
            set
            {
                if (_BuyingPrice != value)
                {
                    OnBuyingPriceChanging(value);
                    ReportPropertyChanging("BuyingPrice");
                    _BuyingPrice = StructuralObject.SetValidValue(value, "BuyingPrice");
                    ReportPropertyChanged("BuyingPrice");
                    OnBuyingPriceChanged();
                }
            }
        }
        private global::System.Decimal _BuyingPrice;
        partial void OnBuyingPriceChanging(global::System.Decimal value);
        partial void OnBuyingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                if (_Brand != value)
                {
                    OnBrandChanging(value);
                    ReportPropertyChanging("Brand");
                    _Brand = StructuralObject.SetValidValue(value, false, "Brand");
                    ReportPropertyChanged("Brand");
                    OnBrandChanged();
                }
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                if (_Country != value)
                {
                    OnCountryChanging(value);
                    ReportPropertyChanging("Country");
                    _Country = StructuralObject.SetValidValue(value, false, "Country");
                    ReportPropertyChanged("Country");
                    OnCountryChanged();
                }
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                if (_City != value)
                {
                    OnCityChanging(value);
                    ReportPropertyChanging("City");
                    _City = StructuralObject.SetValidValue(value, false, "City");
                    ReportPropertyChanged("City");
                    OnCityChanged();
                }
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    OnModelChanging(value);
                    ReportPropertyChanging("Model");
                    _Model = StructuralObject.SetValidValue(value, false, "Model");
                    ReportPropertyChanged("Model");
                    OnModelChanged();
                }
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                if (_Category != value)
                {
                    OnCategoryChanging(value);
                    ReportPropertyChanging("Category");
                    _Category = StructuralObject.SetValidValue(value, false, "Category");
                    ReportPropertyChanged("Category");
                    OnCategoryChanged();
                }
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Years
        {
            get
            {
                return _Years;
            }
            set
            {
                if (_Years != value)
                {
                    OnYearsChanging(value);
                    ReportPropertyChanging("Years");
                    _Years = StructuralObject.SetValidValue(value, false, "Years");
                    ReportPropertyChanged("Years");
                    OnYearsChanged();
                }
            }
        }
        private global::System.String _Years;
        partial void OnYearsChanging(global::System.String value);
        partial void OnYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item
        {
            get
            {
                return _Item;
            }
            set
            {
                if (_Item != value)
                {
                    OnItemChanging(value);
                    ReportPropertyChanging("Item");
                    _Item = StructuralObject.SetValidValue(value, false, "Item");
                    ReportPropertyChanged("Item");
                    OnItemChanged();
                }
            }
        }
        private global::System.String _Item;
        partial void OnItemChanging(global::System.String value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VIN
        {
            get
            {
                return _VIN;
            }
            set
            {
                if (_VIN != value)
                {
                    OnVINChanging(value);
                    ReportPropertyChanging("VIN");
                    _VIN = StructuralObject.SetValidValue(value, false, "VIN");
                    ReportPropertyChanged("VIN");
                    OnVINChanged();
                }
            }
        }
        private global::System.String _VIN;
        partial void OnVINChanging(global::System.String value);
        partial void OnVINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                if (_ProductType != value)
                {
                    OnProductTypeChanging(value);
                    ReportPropertyChanging("ProductType");
                    _ProductType = StructuralObject.SetValidValue(value, false, "ProductType");
                    ReportPropertyChanged("ProductType");
                    OnProductTypeChanged();
                }
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    OnStateChanging(value);
                    ReportPropertyChanging("State");
                    _State = StructuralObject.SetValidValue(value, false, "State");
                    ReportPropertyChanged("State");
                    OnStateChanged();
                }
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sold
        {
            get
            {
                return _Sold;
            }
            set
            {
                if (_Sold != value)
                {
                    OnSoldChanging(value);
                    ReportPropertyChanging("Sold");
                    _Sold = StructuralObject.SetValidValue(value, "Sold");
                    ReportPropertyChanged("Sold");
                    OnSoldChanged();
                }
            }
        }
        private global::System.Boolean _Sold;
        partial void OnSoldChanging(global::System.Boolean value);
        partial void OnSoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasOrder
        {
            get
            {
                return _HasOrder;
            }
            set
            {
                if (_HasOrder != value)
                {
                    OnHasOrderChanging(value);
                    ReportPropertyChanging("HasOrder");
                    _HasOrder = StructuralObject.SetValidValue(value, "HasOrder");
                    ReportPropertyChanged("HasOrder");
                    OnHasOrderChanged();
                }
            }
        }
        private global::System.Boolean _HasOrder;
        partial void OnHasOrderChanging(global::System.Boolean value);
        partial void OnHasOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReimbursed
        {
            get
            {
                return _IsReimbursed;
            }
            set
            {
                if (_IsReimbursed != value)
                {
                    OnIsReimbursedChanging(value);
                    ReportPropertyChanging("IsReimbursed");
                    _IsReimbursed = StructuralObject.SetValidValue(value, "IsReimbursed");
                    ReportPropertyChanged("IsReimbursed");
                    OnIsReimbursedChanged();
                }
            }
        }
        private global::System.Boolean _IsReimbursed;
        partial void OnIsReimbursedChanging(global::System.Boolean value);
        partial void OnIsReimbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReplace
        {
            get
            {
                return _IsReplace;
            }
            set
            {
                if (_IsReplace != value)
                {
                    OnIsReplaceChanging(value);
                    ReportPropertyChanging("IsReplace");
                    _IsReplace = StructuralObject.SetValidValue(value, "IsReplace");
                    ReportPropertyChanged("IsReplace");
                    OnIsReplaceChanged();
                }
            }
        }
        private global::System.Boolean _IsReplace;
        partial void OnIsReplaceChanging(global::System.Boolean value);
        partial void OnIsReplaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReturn
        {
            get
            {
                return _IsReturn;
            }
            set
            {
                if (_IsReturn != value)
                {
                    OnIsReturnChanging(value);
                    ReportPropertyChanging("IsReturn");
                    _IsReturn = StructuralObject.SetValidValue(value, "IsReturn");
                    ReportPropertyChanged("IsReturn");
                    OnIsReturnChanged();
                }
            }
        }
        private global::System.Boolean _IsReturn;
        partial void OnIsReturnChanging(global::System.Boolean value);
        partial void OnIsReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, "Status");
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                if (_StatusName != value)
                {
                    OnStatusNameChanging(value);
                    ReportPropertyChanging("StatusName");
                    _StatusName = StructuralObject.SetValidValue(value, false, "StatusName");
                    ReportPropertyChanged("StatusName");
                    OnStatusNameChanged();
                }
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="ProductYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductYear object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="yearId">Initial value of the YearId property.</param>
        public static ProductYear CreateProductYear(global::System.Int32 id, global::System.Int32 productId, global::System.Int32 yearId)
        {
            ProductYear productYear = new ProductYear();
            productYear.Id = id;
            productYear.ProductId = productId;
            productYear.YearId = yearId;
            return productYear;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearId
        {
            get
            {
                return _YearId;
            }
            set
            {
                OnYearIdChanging(value);
                ReportPropertyChanging("YearId");
                _YearId = StructuralObject.SetValidValue(value, "YearId");
                ReportPropertyChanged("YearId");
                OnYearIdChanged();
            }
        }
        private global::System.Int32 _YearId;
        partial void OnYearIdChanging(global::System.Int32 value);
        partial void OnYearIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_ProductYear_Year", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("SpareParts.DataAccess.Models.FK_ProductYear_Year", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("SpareParts.DataAccess.Models.FK_ProductYear_Year", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("SpareParts.DataAccess.Models.FK_ProductYear_Year", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("SpareParts.DataAccess.Models.FK_ProductYear_Year", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_ProductYear_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SpareParts.DataAccess.Models.FK_ProductYear_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SpareParts.DataAccess.Models.FK_ProductYear_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SpareParts.DataAccess.Models.FK_ProductYear_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("SpareParts.DataAccess.Models.FK_ProductYear_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Rating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rating object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Rating CreateRating(global::System.Int32 id, global::System.String name, global::System.Decimal amount)
        {
            Rating rating = new Rating();
            rating.Id = id;
            rating.Name = name;
            rating.Amount = amount;
            return rating;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_Rating", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_Rating", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_Rating", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static State CreateState(global::System.Int32 id, global::System.String name)
        {
            State state = new State();
            state.Id = id;
            state.Name = name;
            return state;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_Product_State", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_State", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SpareParts.DataAccess.Models.FK_Product_State", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="SubModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubModel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SubModel CreateSubModel(global::System.Int32 id, global::System.String name)
        {
            SubModel subModel = new SubModel();
            subModel.Id = id;
            subModel.Name = name;
            return subModel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "ModelSubModel", "Model")]
        public EntityCollection<Model> Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Model>("SpareParts.DataAccess.Models.ModelSubModel", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Model>("SpareParts.DataAccess.Models.ModelSubModel", "Model", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpareParts.DataAccess.Models", Name="Year")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Year : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Year object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Year CreateYear(global::System.Int32 id)
        {
            Year year = new Year();
            year.Id = id;
            return year;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Year1
        {
            get
            {
                return _Year1;
            }
            set
            {
                OnYear1Changing(value);
                ReportPropertyChanging("Year1");
                _Year1 = StructuralObject.SetValidValue(value, "Year1");
                ReportPropertyChanged("Year1");
                OnYear1Changed();
            }
        }
        private Nullable<global::System.Int16> _Year1;
        partial void OnYear1Changing(Nullable<global::System.Int16> value);
        partial void OnYear1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SpareParts.DataAccess.Models", "FK_ProductYear_Year", "ProductYear")]
        public EntityCollection<ProductYear> ProductYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductYear>("SpareParts.DataAccess.Models.FK_ProductYear_Year", "ProductYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductYear>("SpareParts.DataAccess.Models.FK_ProductYear_Year", "ProductYear", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
